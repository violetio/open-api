openapi: 3.0.1
info:
  title: Violet API
  contact:
    name: Violet.io
  version: v1
servers:
- url: //sandbox-api.violet.io/v1
tags:
- name: Access
  description: ""
- name: Catalog - Products
  description: ""
- name: Catalog - Offers
  description: ""
- name: Catalog - Skus
  description: ""
- name: Catalog - Categories
  description: ""
- name: Checkout - Cart
  description: ""
- name: Checkout - Items
  description: ""
- name: Checkout - Customer
  description: ""
- name: Checkout - Shipping
  description: ""
- name: Checkout - Payment
  description: ""
- name: Checkout - Completion
  description: ""
paths:
  /login:
    post:
      tags:
      - Access
      summary: Login
      description: Log into an existing Violet account with a username and password.
        If sucessful an access token will be returned in the response body for use
        in additional requests against the API.
      parameters:
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      x-codegen-request-body-name: body
  /auth/token:
    get:
      tags:
      - Access
      summary: Refresh Token
      description: Refreshes a Users token. Pass the "refresh_token" value provided
        in the response body of a login request in the "X-Violet-Token" header.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
  /catalog/products:
    get:
      tags:
      - Catalog - Products
      summary: Get Products
      description: Retreives a paginated list of all products in ascending order since
        date of creation.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_public
        in: query
        description: Excludes all publicly available products that are not part of
          your curated catalog. In sandbox this should be left as false as there are
          no merchant <-> developer relationships and all products are publically
          available to all developers.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProduct'
  /catalog/products/random:
    get:
      tags:
      - Catalog - Products
      summary: Get Random Products
      description: Retreives a paginated list of products in random order. The original
        random order is maintained through pagination.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_public
        in: query
        description: Excludes all publicly available products that are not part of
          your curated catalog. In sandbox this should be left as false as there are
          no merchant <-> developer relationships and all products are publically
          available to all developers.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProduct'
  /catalog/products/{product_id}:
    get:
      tags:
      - Catalog - Products
      summary: Get Product by ID
      description: Retrieves a single product by ID. This request will include all
        offers of that product.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: product_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /catalog/products/search:
    post:
      tags:
      - Catalog - Products
      summary: Search Products
      description: Search the complete product catalog by using the available filters
        in the request body.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_public
        in: query
        description: Excludes all publicly available products that are not part of
          your curated catalog. In sandbox this should be left as false as there are
          no merchant <-> developer relationships and all products are publically
          available to all developers.
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageProduct'
      x-codegen-request-body-name: body
  /catalog/skus/{sku_id}:
    get:
      tags:
      - Catalog - Skus
      summary: Get Sku by ID
      description: Retreives a single SKU by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: sku_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
  /catalog/offers/{offer_id}:
    get:
      tags:
      - Catalog - Offers
      summary: Get Offer by ID
      description: Retrieves a single offer by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: offer_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
  /catalog/categories:
    get:
      tags:
      - Catalog - Categories
      summary: Get Categories
      description: Retreives a paginated list of all available categories.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /catalog/categories/search/{query}:
    get:
      tags:
      - Catalog - Categories
      summary: Search Categories
      description: Performs a paginated search of all categories where name matches
        query.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: query
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /catalog/categories/slug/{slug}:
    get:
      tags:
      - Catalog - Categories
      summary: Get Category by Slug
      description: Retrieves a single category by slug.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: slug
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /catalog/categories/{id}:
    get:
      tags:
      - Catalog - Categories
      summary: Get Category by ID
      description: Retrieves a single category by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /catalog/categories/{id}/tree:
    get:
      tags:
      - Catalog - Categories
      summary: Get Category Tree
      description: Retreives the category tree by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /checkout/cart:
    post:
      tags:
      - Checkout - Cart
      summary: Create Cart
      description: Creates a new empty cart. <br><br>By setting the 'apply_current_user'
        flag to true the user associated with the current access token will be applied
        to the cart. If the user has an existing shipping address and/or billing address
        saved to their account these will automatically be applied to the cart. <strong>Only
        applies to oAuthed customer transactions.</strong> <br><br>By setting the
        'default_payment_method' flag to true the default payment method, if one exists,
        of the user associated with the current token will be applied to the cart.
        <strong>Only applies to oAuthed customer transactions.</strong> <br><br>Use
        the optional 'app_order_id' parameter to map the newly created cart to an
        ID in your systems.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: app_order_id
        in: query
        schema:
          type: string
      - name: base_currency
        in: query
        schema:
          type: string
          default: USD
      - name: referral_id
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/byToken/{token}:
    get:
      tags:
      - Checkout - Cart
      summary: Get Cart by Token
      description: Retreives a single cart by its token. The token a unique string
        generated for each cart at the time of creation.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}:
    get:
      tags:
      - Checkout - Cart
      summary: Get Cart by ID
      description: Retreives a single cart by its ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
      - Checkout - Cart
      summary: Delete Cart
      description: Deletes a cart by its ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: successful operation
          content: {}
  /checkout/cart/{cart_id}/skus:
    post:
      tags:
      - Checkout - Items
      summary: Add SKU to Cart
      description: Adds a SKU to the cart by its ID. Quantity will default to 1 if
        no quantity is passed. Quantities greater than 10 will default to 10.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSku'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /checkout/cart/{cart_id}/skus/{order_sku_id}:
    put:
      tags:
      - Checkout - Items
      summary: Update SKU in Cart
      description: Modifies a cart SKU by its ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: order_sku_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSku'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Checkout - Items
      summary: Remove SKU from Cart
      description: Removes a cart SKU by its ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: order_sku_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/billing_address:
    put:
      tags:
      - Checkout - Customer
      summary: Update Billing Address
      description: Modifies the billing address of the cart.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
    post:
      tags:
      - Checkout - Customer
      summary: Set Billing Address
      description: Applies the provided billing address to the cart.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /checkout/cart/{cart_id}/customer:
    post:
      tags:
      - Checkout - Customer
      summary: Apply Guest Customer to Cart
      description: Applies a guest customer to the cart. Guest customers consist of
        a first name, last name, and email address. Guest customers are not persisted
        within Violet for use on future orders.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestOrderCustomer'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /checkout/cart/{cart_id}/shipping:
    post:
      tags:
      - Checkout - Shipping
      summary: Set Shipping Methods
      description: Applies a shipping method to a bag. Shipping methods available
        to each bag can be retreived from 'Get Available Shipping Methods' endpoint.
        Each bag requires a shipping method.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BagShippingMethod'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /checkout/cart/{cart_id}/shipping/available:
    get:
      tags:
      - Checkout - Shipping
      summary: Get Available Shipping Methods
      description: Returns a list of available shipping methods for each bag. The
        shipping address and customer must be applied to the cart before requesting
        shipping methods.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderShippingMethodWrapper'
  /checkout/cart/{cart_id}/shipping/{shipping_method_id}:
    delete:
      tags:
      - Checkout - Shipping
      summary: Remove Shipping Method
      description: Removes a previously applied shipping from the cart.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: shipping_method_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/payment/token:
    get:
      tags:
      - Checkout - Payment
      summary: Get Stripe Public Token
      description: Obtain the current Stripe Publishable Key for use in tokenizing
        payment card data with the <a target='_blank' href='https://stripe.com/docs/stripe-js/reference#stripe-create-token'>Stripe.js
        library</a>.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentPaymentToken'
  /checkout/cart/{cart_id}/payment:
    post:
      tags:
      - Checkout - Payment
      summary: Apply Payment Method
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartPaymentMethod'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /checkout/cart/{cart_id}/shipping_address:
    put:
      tags:
      - Checkout - Customer
      summary: Update Shipping Address
      description: Modifies the shipping address of the cart.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
    post:
      tags:
      - Checkout - Customer
      summary: Set Shipping Address
      description: Applies the provided shipping address to the cart.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      x-codegen-request-body-name: body
  /checkout/cart/{cart_id}/price:
    get:
      tags:
      - Checkout - Completion
      summary: Price Cart
      description: Prices the cart. This includes the calculation of shipping and
        tax rates. Before pricing a cart the shipping address, billing address, shipping
        method, and any SKUs should be applied to the cart.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/submit:
    post:
      tags:
      - Checkout - Completion
      summary: Submit Cart
      description: Submits a cart. For each unique bag in your cart an order will
        be submitted to the source merchant's platform. Depending on the number of
        bags in your cart this request can take a few moments as each external order
        is submitted.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/search:
    post:
      tags:
      - Orders
      summary: Search Orders
      description: Performs a paginated search of all orders. Orders can be searched
        by 'merchant_id', 'user_id', or a combination of both. <br><br>Orders are
        limited to those placed by your app.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchRequest'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOrder'
      x-codegen-request-body-name: body
  /orders:
    get:
      tags:
      - Orders
      summary: Get Orders
      description: Returns a paginated list of orders. <br><br>Orders are limited
        to those placed by your app.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOrder'
  /orders/{order_id}:
    get:
      tags:
      - Orders
      summary: Get Order by ID
      description: Retrieves a single order by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /apps/{app_id}/webhooks:
    get:
      tags:
      - Webhooks
      summary: List Webhooks
      description: Retrieves a list of previously created webhooks.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: app_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: event
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
    post:
      tags:
      - Webhooks
      summary: Create Webhook
      description: Creates a new webhook for the desired event. The remote endpoint
        must be HTTPS.<br><br>We currently limit webhooks to one per event per app.
        If the event is already active on a previously created webhook that existing
        webhook will be updated with the new endpoint.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: app_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
      x-codegen-request-body-name: body
  /apps/{app_id}/webhooks/{webhook_id}:
    get:
      tags:
      - Webhooks
      summary: Get Webhook by ID
      description: Retrieves a single webhook by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: app_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: webhook_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
    put:
      tags:
      - Webhooks
      summary: Update Webhook
      description: Modifies an existing webhook by ID.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: app_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: webhook_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Webhooks
      summary: Delete Webhook
      description: Removes a webhook. Events will immedietly stop posting to this
        endpoint upon deletion.
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int64
      - name: app_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: webhook_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: successful operation
          content: {}
components:
  schemas:
    Meta:
      required:
      - key
      - offer_id
      - value
      type: object
      properties:
        id:
          type: integer
          format: int64
        offer_id:
          type: integer
          description: Offer Id
          format: int64
        key:
          type: string
          description: Key
        value:
          type: string
          description: Value
      description: Additional Product Data
    PageOrder:
      type: object
      properties:
        total_pages:
          type: integer
          format: int32
        total_elements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
          default: false
        last:
          type: boolean
          default: false
        number_of_elements:
          type: integer
          format: int32
    PageProduct:
      type: object
      properties:
        total_pages:
          type: integer
          format: int32
        total_elements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
          default: false
        last:
          type: boolean
          default: false
        number_of_elements:
          type: integer
          format: int32
    SearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Query
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        category_id:
          type: string
          description: Category ID
        category_slug:
          type: string
          description: Category Slug
        min_commission:
          type: number
          description: Minimum Commission
          format: double
        max_commission:
          type: number
          description: Maximum Commission
          format: double
        min_price:
          type: integer
          description: Minimum Price
          format: int32
        max_price:
          type: integer
          description: Maximum Price
          format: int32
        include_offers:
          type: boolean
          description: Include offers with products
          default: false
      description: Search Request
    Sort:
      type: object
    ProductVariantValue:
      required:
      - variant_id
      type: object
      properties:
        id:
          type: string
        variant_id:
          type: string
          description: ID of the Variation
        name:
          type: string
          description: Name
        display_order:
          type: integer
          description: Display Order
          format: int32
        swatch:
          type: string
          description: Color/Pattern Swatch URL
        hex:
          type: string
          description: Hex Code
      description: Product Variant Value
    Category:
      required:
      - depth
      - name
      - slug
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Category Name
        slug:
          type: string
          description: Category Slug
        parent_id:
          type: string
          description: Parent ID
        depth:
          type: integer
          description: Category Depth
          format: int32
      description: Product Category
    SkuVariantValue:
      required:
      - value
      - variant
      type: object
      properties:
        variant:
          type: string
          description: Variant Name
        value:
          type: string
          description: Variant Value
      description: Individual Variation Value for a Sku
    Sku Dimensions:
      type: object
      properties:
        sku_id:
          type: integer
          description: ID of SKU Dimensions Belong To
          format: int64
        weight:
          type: number
          description: Weight of SKU
          format: double
        height:
          type: number
          description: Height of SKU
          format: double
        width:
          type: number
          description: Width of SKU
          format: double
        length:
          type: number
          description: Length of SKU
          format: double
        type:
          type: string
          description: Dimensions Type
          enum:
          - SKU
          - SHIPPING
      description: Individual Sku Dimensions
    Media:
      required:
      - album_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        album_id:
          type: integer
          description: Album ID
          format: int64
        external_id:
          type: string
          description: External ID
        cloud_id:
          type: string
          description: ID of hosted cloud entity
        url:
          type: string
          description: Media URL
        source_url:
          type: string
          description: Media Source URL
        type:
          type: string
          description: Media Type
          enum:
          - image
          - video
        display_order:
          type: integer
          description: Display Order
          format: int32
        primary_media:
          type: boolean
          description: Primary Media
          default: false
      description: Media
    Album:
      required:
      - parent_id
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        parent_id:
          type: integer
          description: ID of the parent entity
          format: int64
        type:
          type: string
          description: Parent Type
          enum:
          - offer
          - sku
        name:
          type: string
          description: Name of Album
        media:
          type: array
          description: Album media
          items:
            $ref: '#/components/schemas/Media'
      description: Product Image Container
    Product:
      required:
      - name
      - slug
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Product Name
        description:
          type: string
          description: Product Description
        long_description:
          type: string
          description: Product Long Description
        slug:
          type: string
          description: Product Slug/Handle
        brand:
          type: string
          description: Brand
        available:
          type: boolean
          description: Is the Product Available
          default: false
        visible:
          type: boolean
          description: Is the Product Visible
          default: false
        type:
          type: string
          description: Product Type
          enum:
          - physical
          - digital
          - virtual
        currency:
          type: string
          enum:
          - USD
          - GBP
        min_price:
          type: integer
          description: Minimum Price of the Product
          format: int32
        max_price:
          type: integer
          description: Maximum Price of the Product
          format: int32
        variants:
          type: array
          description: Product Variants
          items:
            $ref: '#/components/schemas/ProductVariant'
        offers:
          type: array
          description: Merchant Offerings
          items:
            $ref: '#/components/schemas/Offer'
        categories:
          type: array
          description: Categories
          items:
            $ref: '#/components/schemas/Category'
        gender:
          type: string
          description: Gender
          enum:
          - MALE
          - FEMALE
          - UNISEX
        meta:
          type: array
          description: Meta Data
          items:
            $ref: '#/components/schemas/Meta'
        tags:
          type: array
          description: Tags
          items:
            type: string
        related_product_ids:
          type: array
          description: ID's of related products.
          items:
            type: string
        cross_sale_product_ids:
          type: array
          description: ID's of Cross Saleable Products.
          items:
            type: string
        gtins:
          type: array
          description: List of Global Trade Item Numbers
          items:
            type: string
        default_image_url:
          type: string
          description: The default/cover image of the Product
        qty_available:
          type: integer
          description: Overall Quantity
          format: int32
        max_commission_rate:
          type: number
          description: The maximum commission rate offered by a merchant.
          format: double
        date_created:
          type: string
          description: Date of product creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last product update
          format: date-time
      description: Products
    Dimension:
      required:
      - measure
      - sku_id
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        sku_id:
          type: integer
          description: Sku ID
          format: int64
        measure:
          type: string
          description: What's being measured
          enum:
          - height
          - weight
          - width
          - depth
        type:
          type: string
          description: Type of Measurement
          enum:
          - product
          - shipping
        unit_of_measure:
          type: string
          description: Unit of Measure
          enum:
          - inches
          - feet
          - centimeters
          - ounces
          - pounds
          - grams
          - kilograms
        value:
          type: number
          description: Value
          format: double
      description: Individual Product Dimensions
    Variant:
      type: object
      properties:
        product_variant_id:
          type: string
          description: ID of the Product Variant
        external_id:
          type: string
          description: ID of the Variant on the External Ecommerce Platform
        name:
          type: string
          description: Variant Name
        visual:
          type: boolean
          description: Is the variant visual
          default: false
        values:
          type: array
          items:
            $ref: '#/components/schemas/VariantValue'
      description: Variation Data
    Offer:
      required:
      - available
      - merchant_id
      - min_price
      - name
      - product_id
      - source
      - visible
      type: object
      properties:
        id:
          type: integer
          format: int64
        product_id:
          type: string
          description: The parent/container product ID
        external_id:
          type: string
          description: External ID
        external_url:
          type: string
          description: External URL
        name:
          type: string
          description: Name of Product in Offer
        description:
          type: string
          description: Product Description
        source:
          type: string
          description: Source Platform
          enum:
          - OTHER
          - SHOPIFY
          - MAGENTO
          - MAGENTO_ONE
          - WOOCOMMERCE
          - BIGCOMMERCE
          - LIGHTSPEED
          - ECWID
          - YAAS
          - SPREECOMMERCE
          - DEMANDWARE
          - VOLUSION
        seller:
          type: string
          description: Name of Merchant Selling Product
        vendor:
          type: string
          description: Name of Original Vendor
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        available:
          type: boolean
          description: Is Product Available
          default: false
        visible:
          type: boolean
          description: Is Product Visible
          default: false
        min_price:
          type: integer
          description: Minimum Price the Product sells for
          format: int32
        max_price:
          type: integer
          description: Maximum Price the Product sells for
          format: int32
        commission_rate:
          type: number
          description: Amount given by merchant
          format: double
        special_commission_rate:
          type: boolean
          description: If the commission rate is unique to this offer.
          default: false
        currency:
          type: string
          description: Default Currency of Offer
        source_category_name:
          type: string
          description: Original Category on Source Platform
        meta:
          type: array
          description: Additional Meta Data of the Offer
          items:
            $ref: '#/components/schemas/Meta'
        variants:
          type: array
          description: Product Variations
          items:
            $ref: '#/components/schemas/Variant'
        skus:
          type: array
          description: Product SKUs
          items:
            $ref: '#/components/schemas/Sku'
        albums:
          type: array
          description: Product Albums
          items:
            $ref: '#/components/schemas/Album'
        three_d_enables:
          type: boolean
          description: Is the product 3D Enabled
          default: false
        three_d_resource:
          type: string
          description: 3D Resource Object
        type:
          type: string
          description: Product Type
          enum:
          - PHYSICAL
          - DIGITAL
          - VIRTUAL
        status:
          type: string
          description: Status
          enum:
          - ENABLED
          - DISABLED
        date_created:
          type: string
          description: Date of offer creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last offer update
          format: date-time
        weight_unit:
          type: string
          description: Weight Unit
          enum:
          - OUNCES
          - POUNDS
          - GRAMS
          - KILOGRAMS
          - CARATS
          - TONNES
          - MILLIGRAMS
          - LITERS
          - MILLILITERS
          - QUARTS
          - QUARTERS
          - GALLONS
          - PINTS
        size_unit:
          type: string
          description: Size Unit
          enum:
          - MILLIMETERS
          - CENTIMETERS
          - INCHES
          - FEET
          - METERS
          - YARDS
      description: Product Offer
    VariantValue:
      type: object
      properties:
        product_variant_value_id:
          type: string
          description: ID of the Product Variation Value
        external_id:
          type: string
          description: ID of the Variant in the External Ecommerce Platform
        name:
          type: string
          description: Variant Value Name
        sku_ids:
          type: array
          description: ID's of SKU's containing this Variant Value
          items:
            type: integer
            format: int64
      description: Individual Variation Value
    ProductVariant:
      required:
      - product_id
      type: object
      properties:
        id:
          type: string
        product_id:
          type: string
          description: Product ID
        name:
          type: string
        visual:
          type: boolean
          description: Is this a visual variant
          default: false
        values:
          type: array
          description: Product Variant values
          items:
            $ref: '#/components/schemas/ProductVariantValue'
        display_order:
          type: integer
          description: Display Order
          format: int32
      description: Product Variant
    Sku:
      required:
      - currency
      - merchant_id
      - offer_id
      - sale_price
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        offer_id:
          type: integer
          description: ID of the Offer
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant
          format: int32
        external_id:
          type: string
          description: ID of the SKU on the External Ecom Platform
        name:
          type: string
          description: Sku Name
        asin:
          type: string
          description: Amazon Standard Identification Number
        gtin:
          type: string
          description: Global Trade Item Number
        upc:
          type: string
          description: Universal Product Code
        ean:
          type: string
          description: European Article Number
        isbn:
          type: string
          description: International Standard Book Number
        in_stock:
          type: boolean
          description: Is the Product in Stock
          default: false
        quantity_available:
          type: integer
          description: Quantity Available
          format: int32
        inventory_tracked:
          type: boolean
          description: Is the SKUs inventory tracked
          default: false
        sale_price:
          type: integer
          description: Sale Price of the SKU
          format: int32
        retail_price:
          type: integer
          description: Retail Price of the SKU
          format: int32
        currency:
          type: string
          description: The starting currency of this SKU
        taxable:
          type: boolean
          description: Is the product taxable
          default: false
        tax_type:
          type: string
          description: Type of Tax on this SKU
          enum:
          - default
          - apparel
          - service
        albums:
          type: array
          description: Sku Albums
          items:
            $ref: '#/components/schemas/Album'
        variant_values:
          type: array
          description: Variant Values that apply to this SKU
          items:
            $ref: '#/components/schemas/SkuVariantValue'
        type:
          type: string
          enum:
          - physical
          - digital
          - virtual
        status:
          type: string
          description: SKU Status
          enum:
          - enabled
          - disabled
        date_created:
          type: string
          description: Date of SKU creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last SKU update
          format: date-time
        sku_dimensions:
          $ref: '#/components/schemas/Sku Dimensions'
      description: Stock Keeping Unit
    Order:
      required:
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
        seller_id:
          type: integer
          description: ID of the Seller
          format: int64
        user_id:
          type: integer
          description: ID of the User placing the order
          format: int64
        app_id:
          type: integer
          description: ID of the App creating the order
          format: int64
        customer:
          $ref: '#/components/schemas/OrderCustomer'
        bags:
          type: array
          description: Bags in the Order
          items:
            $ref: '#/components/schemas/Bag'
        shipping_address:
          $ref: '#/components/schemas/OrderAddress'
        billing_address:
          $ref: '#/components/schemas/OrderAddress'
        payment_method:
          $ref: '#/components/schemas/OrderPaymentMethod'
        sub_total:
          type: integer
          description: Subtotal of the Order
          format: int32
        shipping_total:
          type: integer
          description: Shipping Total of the Order
          format: int32
        tax_total:
          type: integer
          description: Tax Total of the Order
          format: int32
        total:
          type: integer
          description: Total of the Order
          format: int32
        app_customer_id:
          type: string
          description: App Customer ID
        app_order_id:
          type: string
          description: App Order ID
        status:
          type: string
          description: Status of the Order
          enum:
          - in_progress
          - processing
          - completed
          - canceled
          - partially_refunded
          - refunded
        date_created:
          type: string
          description: Date of order creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last order update
          format: date-time
        guest:
          type: boolean
          description: Is the customer a guest or an authed user.
          default: false
        referral_id:
          type: string
          description: Optional value used to represent an identifier in your system.
            Max length of 128 characters.
      description: Order
    OrderTax:
      required:
      - amount
      - merchant_id
      - order_id
      - rate
      - state
      type: object
      properties:
        order_id:
          type: integer
          description: ID of the Order the Tax belongs to
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant the Bag belongs to
          format: int32
        skus:
          type: array
          description: SKUs covered by the Tax
          items:
            type: string
        state:
          type: string
          description: State abbreviation
        postal_code:
          type: string
          description: Postal/Zip Code
        rate:
          type: number
          description: Tax Rate
          format: double
        amount:
          type: integer
          description: Total Tax amount on Bag
          format: int32
        description:
          type: string
          description: Description of the Tax
      description: Taxes belonging to an Order Bag
    BagShippingMethod:
      type: object
      properties:
        bag_id:
          type: integer
          format: int64
        shipping_method_id:
          type: string
      description: Shipping Method applied to a Bag
    OrderSearchRequest:
      type: object
      properties:
        user_id:
          type: integer
          description: User ID
          format: int64
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        referral_id:
          type: string
          description: Referral ID
      description: Search Request
    OrderCustomer:
      required:
      - email
      - first_name
      - last_name
      type: object
      properties:
        user_id:
          type: integer
          description: ID of the User the Order Customer references
          format: int64
        first_name:
          type: string
          description: First Name
        last_name:
          type: string
          description: Last Name
        email:
          type: string
          description: Email Address of Customer
        name:
          type: string
      description: The Customer Placing the Order
    GuestOrderCustomer:
      required:
      - email
      - first_name
      - last_name
      type: object
      properties:
        first_name:
          type: string
          description: First Name
        last_name:
          type: string
          description: Last Name
        email:
          type: string
          description: Email Address of Customer
        shipping_address:
          $ref: '#/components/schemas/OrderAddress'
        billing_address:
          $ref: '#/components/schemas/OrderAddress'
        same_address:
          type: boolean
          description: 'Use Same Address for Both '
          default: false
      description: The Guest Customer Placing the Order
    OrderSku:
      required:
      - sku_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant the SKU belongs to
          format: int32
        app_id:
          type: integer
          description: ID of the App creating the Order
          format: int64
        product_id:
          type: string
          description: ID of the Product
        sku_id:
          type: integer
          description: ID of the referenced SKU
          format: int64
        external_id:
          type: string
          description: ID of the SKU on the External Ecommerce Platform
        name:
          type: string
          description: Name of the SKU
        thumbnail:
          type: string
          description: URL of the thumbnail image
        quantity:
          type: integer
          description: Quantity of the SKU being purchased
          format: int32
        price:
          type: integer
          description: SKU Price
          format: int32
      description: SKUs belonging to an Order
    Transaction:
      required:
      - app_id
      - bag_id
      - merchant_id
      - payment_method_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant receiving the transaction
          format: int32
        seller_id:
          type: integer
          description: ID of the User who facilitated the transaction
          format: int64
        app_id:
          type: integer
          description: ID of the App that created the Order
          format: int64
        order_id:
          type: integer
          description: ID of the Order the Transaction applies to
          format: int64
        bag_id:
          type: integer
          description: ID of the Bag the Transaction applies to
          format: int64
        payment_method_id:
          type: integer
          description: ID of the referenced Payment Method
          format: int64
        gateway_transaction_id:
          type: string
          description: ID of the Transaction in the Payment Gateway
        gateway:
          type: string
          description: Gateway processing the Transaction
        amount:
          type: integer
          description: Total amount being transacted
          format: int32
        currency:
          type: string
          description: Currency the Transaction takes place in
        type:
          type: string
          description: Transaction Type
          enum:
          - authorization
          - capture
          - sale
          - void
          - refund
        error_code:
          type: string
          description: Error Code from gateway if error occurred
        status:
          type: string
          description: Transaction Status
          enum:
          - processing
          - completed
        test:
          type: boolean
          description: Is this a test Transaction
          default: false
        date_created:
          type: string
          description: Date of transaction creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last transaction update
          format: date-time
        orderPaymentMethod:
          $ref: '#/components/schemas/OrderPaymentMethod'
      description: Order Transaction
    Bag:
      required:
      - app_id
      - merchant_id
      - order_id
      - shipping_method
      - taxes
      type: object
      properties:
        id:
          type: integer
          format: int64
        order_id:
          type: integer
          description: ID of the Order the Bag belongs to
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant the Bag references
          format: int32
        app_id:
          type: integer
          description: ID of the App creating this Bag
          format: int64
        external_id:
          type: string
          description: ID of the Order on the External Ecommerce Platform
        status:
          type: string
          description: Status
          enum:
          - in_progress
          - submitted
          - accepted
          - shipped
          - completed
          - rejected
          - canceled
        fulfillment_status:
          type: string
          description: Fulfillment Status
          enum:
          - unshipped
          - shipped
          - partially_shipped
          - returned
        financial_status:
          type: string
          description: Financial Status
          enum:
          - unpaid
          - authorized
          - pending
          - paid
          - partially_paid
          - refunded
          - partially_refunded
          - voided
        skus:
          type: array
          description: SKUs added to the bag
          items:
            $ref: '#/components/schemas/OrderSku'
        shipping_method:
          $ref: '#/components/schemas/OrderShippingMethod'
        taxes:
          type: array
          description: Taxes applied to the bag
          items:
            $ref: '#/components/schemas/OrderTax'
        sub_total:
          type: integer
          description: Subtotal of the bag
          format: int32
        shipping_total:
          type: integer
          description: Shipping Total of the bag
          format: int32
        tax_total:
          type: integer
          description: Tax Total of the bag
          format: int32
        total:
          type: integer
          description: Total price of the bag
          format: int32
        transactions:
          type: array
          description: Transactions of the bag
          items:
            $ref: '#/components/schemas/Transaction'
        external_checkout:
          type: boolean
          description: If bag is tracked externally
          default: false
        merchant_name:
          type: string
          description: Name of Merchant
      description: Per Merchant Bag in Order
    CurrentPaymentToken:
      type: object
      properties:
        stripe_token:
          type: string
          description: Stripe Public Token
      description: The shipping or billing address of a user placing an order
    OrderAddress:
      required:
      - address_1
      - city
      - country
      - postal_code
      - state
      - type
      type: object
      properties:
        name:
          type: string
          description: Name on Address
        city:
          type: string
          description: City
        state:
          type: string
          description: State Abbreviation
        country:
          type: string
          description: Country ISO2 Code
        postal_code:
          type: string
          description: Postal/Zip Code
        phone:
          type: string
          description: Phone Number
        type:
          type: string
          description: Address Type
          enum:
          - shipping
          - billing
        address_1:
          type: string
          description: First line of the Address
        address_2:
          type: string
          description: Second line of the Address
      description: The shipping or billing address of a user placing an order
    OrderShippingMethod:
      required:
      - bag_id
      - merchant_id
      - price
      - shipping_method_id
      - type
      type: object
      properties:
        type:
          type: string
          description: Type of Shipping Method
          enum:
          - variable
          - flat_rate
        carrier:
          type: string
          enum:
          - ups
          - usps
          - fedex
          - dhl
          - ontrac
        label:
          type: string
          description: Shipping Method Label
        price:
          type: integer
          description: Total cost of the Shipping Method
          format: int32
        min_subtotal:
          type: integer
          description: Minimum Subtotal
          format: int32
        max_subtotal:
          type: integer
          format: int32
        min_weight:
          type: number
          description: Minimum Weight
          format: double
        max_weight:
          type: number
          description: Maximum Weight
          format: double
        id:
          type: integer
          format: int64
        shipping_method_id:
          type: string
          description: ID of the referenced Shipping Method
        bag_id:
          type: integer
          description: ID of the Bag the Shipping Method applies to
          format: int64
        merchant_id:
          type: integer
          description: ID of the merchant the bag belongs to
          format: int32
        tracking_number:
          type: string
          description: Carrier Tracking Number
      description: Shipping Methods belonging to an Order
    OrderShippingMethodWrapper:
      type: object
      properties:
        bag_id:
          type: integer
          format: int64
        shipping_methods:
          type: array
          items:
            $ref: '#/components/schemas/OrderShippingMethod'
      description: Order Shipping Method Wrapper
    CartPaymentMethod:
      type: object
      properties:
        token:
          type: string
          description: Generated payment token.
        card_number:
          type: string
          description: Number on the credit or debit card.
        card_cvc:
          type: integer
          description: CVC code on the credit or debit card.
          format: int32
        card_exp_month:
          type: integer
          description: Expiration month of the credit or debit card.
          format: int32
        card_exp_year:
          type: integer
          description: Expiration year of the credit or debit card.
          format: int32
        card_postal_code:
          type: string
          description: Postal Code of the credit or debit card.
      description: The payment method request for a cart. If the token is provided
        no card data is required.
    OrderPaymentMethod:
      required:
      - payment_method_id
      type: object
      properties:
        brand:
          type: string
          description: Brand of Card
        last_four:
          type: string
          description: Last Four Numbers on Card
        exp_month:
          type: integer
          description: Card Expiration Month
          format: int32
        exp_year:
          type: integer
          description: Card Expiration Year
          format: int32
        cardholder_name:
          type: string
          description: Name as it appears on card.
        payment_method_id:
          type: integer
          description: ID of the referenced Payment Method
          format: int64
        default:
          type: boolean
          description: Is Default Method
          default: false
      description: Payment Method belonging to an Order
    CustomerAddress:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/OrderCustomer'
        shipping_address:
          $ref: '#/components/schemas/OrderAddress'
        billing_address:
          $ref: '#/components/schemas/OrderAddress'
      description: Customer Address
    Role:
      required:
      - name
      type: object
      properties:
        name:
          pattern: '[A-Za-z]+'
          type: string
          description: Name of the Role
        description:
          type: string
          description: Brief description of the Role
        permissions:
          type: array
          description: Permissions available to this Role
          items:
            $ref: '#/components/schemas/Permission'
    LoginResponse:
      required:
      - email
      - first_name
      - last_name
      - password
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
          description: The users first name
        last_name:
          type: string
          description: The users last name
        password:
          type: string
          description: The users raw desired password
        email:
          type: string
          description: The users unique email address
        merchant_id:
          type: integer
          description: The Id of the Store the User is associated to.
          format: int32
        type:
          type: string
          description: The allowed values for the user type
          enum:
          - ADMIN
          - MERCHANT
          - USER
          - DEVELOPER
        verified:
          type: boolean
          description: If a user has verified their emailed address
          default: false
        status:
          type: string
          description: The status of the user
          enum:
          - INACTIVE
          - ACTIVE
          - DISABLED
        date_created:
          type: string
          description: Date of account creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last account update
          format: date-time
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        token:
          type: string
          description: Users Access Token. Currently expires after 1440 minutes.
        refresh_token:
          type: string
          description: Users Refresh Token. Never expires.
      description: Login Response
    Permission:
      required:
      - name
      type: object
      properties:
        name:
          pattern: '[A-Za-z]+'
          type: string
          description: Name of the Permission
        description:
          type: string
          description: Brief description of the Permission
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: User Email Address
        password:
          type: string
          description: User Password
      description: Login Request
    RefreshTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: Token
      description: Refresh Token Response
    Webhook:
      required:
      - event
      - remote_endpoint
      type: object
      properties:
        id:
          type: integer
          format: int64
        app_id:
          type: integer
          format: int64
        event:
          type: string
          description: The event being triggered
          enum:
          - order_updated
          - order_shipped
          - order_completed
          - order_canceled
        remote_endpoint:
          type: string
          description: Remote endpoint the webhook posts against.
        status:
          type: string
          description: Status of the webhook
          enum:
          - inactive
          - active
          - disabled
        date_created:
          type: string
          description: Date of webhook creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last webhook update
          format: date-time
      description: External Hook Event
    Event:
      required:
      - app_id
      - message
      - type
      - user_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        app_id:
          type: integer
          description: App ID
          format: int64
        user_id:
          type: integer
          description: User ID
          format: int64
        type:
          type: string
          description: The type of event
          enum:
          - create
          - update
          - delete
        message:
          type: string
          description: Message event body
        date_created:
          type: string
          description: Date of account creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last account update
          format: date-time
    WebhookHeader:
      type: object
      properties:
        id:
          type: integer
          format: int64
        app_id:
          type: integer
          description: App ID
          format: int64
        webhook_id:
          type: integer
          description: ID of the webhook the header belongs to
          format: int64
        key:
          type: string
          description: Header Key
        value:
          type: string
          description: Header Value
        date_created:
          type: string
          description: Date of webhook header creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last webhook header update
          format: date-time
      description: Webhook Header
    WebhookError:
      required:
      - status_code
      type: object
      properties:
        id:
          type: integer
          format: int64
        app_id:
          type: integer
          description: App ID
          format: int64
        webhook_id:
          type: integer
          description: ID of the webhook the error occurred on
          format: int64
        status_code:
          type: integer
          description: HTTP Status Code
          format: int32
        response:
          type: string
          description: Response from the remote url
        date_created:
          type: string
          description: Date of webhook error creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last webhook error update
          format: date-time
      description: Webhook Error
    App:
      required:
      - app_secret
      - name
      - owner_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner_id:
          type: integer
          description: User ID of Owner
          format: int64
        app_secret:
          type: string
        name:
          type: string
          description: The name of the team/business/project
        description:
          type: string
          description: App description
        auth_callback_url:
          type: string
          description: Remote Callback URL
        auth_redirect_url:
          type: string
          description: Auth Redirect URL
        icon_url:
          type: string
          description: Remote url of the icon file.
        api_version:
          type: string
          description: API Version
        status:
          type: string
          description: App Status
          enum:
          - inactive
          - active
          - disabled
        date_created:
          type: string
          description: Date of account creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last account update
          format: date-time
      description: Developer Application
    AuthRequest:
      required:
      - app_id
      - user_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        app_id:
          type: integer
          description: App ID
          format: int64
        user_id:
          type: integer
          description: ID of User authorizing the App
          format: int64
        code:
          type: string
          description: Code used to confirm the request
        token:
          type: string
          description: Authorization Token
        status:
          type: string
          description: Status of the request
          enum:
          - pending
          - completed
          - expired
        scope:
          type: string
          description: Scope of the requested permissions
        date_expires:
          type: string
          description: Time the request expires
          format: date-time
