openapi: 3.0.1
info:
  title: Catalog-Service
  description: Catalog Service API
  contact:
    name: Violet.io
    url: https://violet.io
  version: v1
servers:
- url: https://sandbox-api.violet.io/v1
tags:
- name: Catalog
- name: Catalog - Products
- name: Catalog - Offers
- name: Catalog - Skus
- name: Catalog - Categories
- name: Catalog - Collections
- name: Currencies
- name: Catalog - Offer subscriptions
paths:
  /catalog/categories:
    get:
      tags:
      - Catalog - Categories
      summary: Get Categories
      operationId: getCategories
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageCategory'
  /catalog/categories/{id}:
    get:
      tags:
      - Catalog - Categories
      summary: Get Category by ID
      operationId: getCategoryById
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /catalog/categories/slug/{slug}:
    get:
      tags:
      - Catalog - Categories
      summary: Get Category by Slug
      operationId: getCategoryBySlug
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: slug
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /catalog/categories/{id}/tree:
    get:
      tags:
      - Catalog - Categories
      summary: Get Category Tree
      operationId: getCategoryTree
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
  /catalog/offers/merchants/{merchant_id}:
    get:
      tags:
      - Catalog - Offers
      summary: Get All Merchant Offers
      operationId: getMerchantOffers
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: X-Violet-Api-Features
        in: header
        schema:
          type: string
      - name: merchant_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: since
        in: query
        description: Use `date_last_modified:min`.
        deprecated: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: map_variants
        in: query
        schema:
          type: boolean
          default: true
      - name: base_currency
        in: query
        schema:
          type: string
      - name: include
        in: query
        description: Comma-separated list of extra data to be included.
        schema:
          type: string
          enum:
          - metadata
          - collections
          - shipping
      - name: date_last_modified:min
        in: query
        description: "Return only the published offers that have been modified after\
          \ the given date time, using the standard Violet datetime format, ISO 8601.\
          \ Example: `2017-06-15T01:01:01+0000`"
        schema:
          type: string
          example: 2017-06-15T01:01:01+0000
        example: 2017-06-15T01:01:01+0000
      - name: date_last_modified:max
        in: query
        description: "Return only the published offers that have been modified before\
          \ the given date time, using the standard Violet datetime format, ISO 8601.\
          \ Example: `2017-06-25T01:01:01+0000`"
        schema:
          type: string
          example: 2017-06-25T01:01:01+0000
        example: 2017-06-25T01:01:01+0000
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageOffer'
  /catalog/offers/merchants/{merchant_id}/count:
    get:
      tags:
      - Catalog - Offers
      summary: Get Count of Merchant Offers
      operationId: getMerchantProductCount
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: merchant_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: date_last_modified:min
        in: query
        description: "Count only the offers that have been modified after the given\
          \ date time, using the standard Violet datetime format, ISO 8601. Example:\
          \ `2017-06-15T01:01:01+0000`"
        schema:
          type: string
          example: 2017-06-15T01:01:01+0000
      - name: date_last_modified:max
        in: query
        description: "Count only the published offers that have been modified before\
          \ the given date time, using the standard Violet datetime format, ISO 8601.\
          \ Example: `2017-06-25T01:01:01+0000`"
        schema:
          type: string
          example: 2017-06-25T01:01:01+0000
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCount'
  /catalog/offers/{offer_id}:
    get:
      tags:
      - Catalog - Offers
      summary: Get Offer by ID
      operationId: getOfferById
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: X-Violet-Api-Features
        in: header
        schema:
          type: string
      - name: offer_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: base_currency
        in: query
        schema:
          type: string
          default: USD
      - name: exchange_rate
        in: query
        schema:
          type: number
          format: double
      - name: include
        in: query
        description: Comma-separated list of extra data to be included.
        schema:
          type: string
          enum:
          - metadata
          - collections
          - shipping
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        "404":
          description: offer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Offer could not be found.
                error: offer_not_found
                code: 2004
        "403":
          description: insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: You do not have permission to access this resource.
                error: insufficient_permissions
                code: 9901
  /catalog/skus/{sku_id}:
    get:
      tags:
      - Catalog - Skus
      summary: Get Sku by ID
      operationId: getSkuById
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: sku_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: base_currency
        in: query
        schema:
          type: string
          default: USD
      - name: include
        in: query
        schema:
          type: string
          default: sku_dimensions
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sku'
  /catalog/categories/search/{query}:
    get:
      tags:
      - Catalog - Categories
      summary: Search Categories
      operationId: searchCategories
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: query
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageScoredCategory'
  /catalog/offers/search:
    post:
      tags:
      - Catalog - Offers
      summary: Search Offers
      description: Maximum size limit of 100 results.
      operationId: searchOffers
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_public
        in: query
        schema:
          type: boolean
          default: true
      - name: exclude_hidden
        in: query
        schema:
          type: boolean
          default: true
      - name: extended
        in: query
        schema:
          type: boolean
          default: false
      - name: beta
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferSearchRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageOffer'
  /catalog/collections/{collection_id}:
    get:
      tags:
      - Catalog - Collections
      summary: Get Collection by ID
      description: Retrieve the `Collection`s details for a given `collection_id`.
      operationId: getCollectionById
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: collection_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
  /catalog/collections/{collection_id}/offers:
    get:
      tags:
      - Catalog - Collections
      summary: Get Collection Offers
      description: Retrieve a list of all `Offer`s inside a `Collection` for a given
        `collection_id`.
      operationId: getCollectionOffers
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: collection_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_hidden
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageOffer'
  /catalog/collections/{collection_id}/offers/ids:
    get:
      tags:
      - Catalog - Collections
      summary: Get Collection Offers IDs
      description: Retrieve a list of all `Offer`s IDs inside a `Collection` for a
        given `collection_id`.
      operationId: getCollectionOffersIds
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: collection_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_hidden
        in: query
        schema:
          type: boolean
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageLong'
  /catalog/collections:
    get:
      tags:
      - Catalog - Collections
      summary: Get All Collections
      description: Retrieve a list of all `Collection`s that you have access to.
      operationId: getCollections
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_hidden
        in: query
        schema:
          type: boolean
          default: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageCollection'
  /catalog/collections/merchants/{merchant_id}:
    get:
      tags:
      - Catalog - Collections
      summary: Get All Merchant Collections
      description: Retrieve a list of all `Collection`s for a given `merchant_id`.
      operationId: getCollectionsByMerchantId
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: merchant_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: exclude_hidden
        in: query
        schema:
          type: boolean
          default: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageCollection'
  /currencies/latest:
    get:
      tags:
      - Currencies
      summary: Retrieves the latest currency exchange rates that are currently being
        utilized within Violet when calculating the prices of Offers and Carts with
        differing currencies. Retrieved exchange rates are cached. This cache will
        never exceed 24 hours.
      operationId: getLatestRates
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: base_currency
        in: query
        schema:
          type: string
      - name: symbols
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Latest'
components:
  schemas:
    Category:
      required:
      - depth
      - name
      - slug
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: Category Name
        slug:
          type: string
          description: Category Slug
        parent_id:
          type: string
          description: Parent ID
        depth:
          type: integer
          description: Category Depth
          format: int32
      description: Product Category
    VioletPageCategory:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            $ref: '#/components/schemas/Category'
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    VioletPageable:
      type: object
      properties:
        page_number:
          type: integer
          description: The current page number (one based)
          format: int32
        page_size:
          type: integer
          description: The number of elements per page
          format: int32
        sort:
          $ref: '#/components/schemas/VioletSort'
        offset:
          type: integer
          description: The offset
          format: int64
        paged:
          type: boolean
          description: Boolean indicating if the result is paged
        unpaged:
          type: boolean
          description: Boolean indicating if the result is unpaged
      description: Violet wrapper for springframework pageable
    VioletSort:
      type: object
      properties:
        unsorted:
          type: boolean
          description: Boolean indicating if the result set is unsorted
        sorted:
          type: boolean
          description: Boolean indicating if the result set is sorted
        empty:
          type: boolean
          description: Boolean indicating if the result set is empty
      description: Violet Wrapper for springframework sort
    Album:
      required:
      - parent_id
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        parent_id:
          type: integer
          description: ID of the parent entity
          format: int64
        type:
          type: string
          description: Parent Type
          enum:
          - OFFER
          - SKU
        name:
          type: string
          description: Name of Album
        media:
          uniqueItems: true
          type: array
          description: Album media
          items:
            $ref: '#/components/schemas/Media'
        primary_media:
          $ref: '#/components/schemas/Media'
      description: Product Image Container
    Collection:
      required:
      - merchant_id
      type: object
      properties:
        id:
          type: integer
          format: int64
        external_id:
          type: string
          description: External ID
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        parent_id:
          type: integer
          description: Parent ID for platforms that have a parent-child collection
            structure.
          format: int64
        name:
          type: string
          description: Name of this collection
        handle:
          type: string
          description: Handle of this collection
        description:
          type: string
          description: Description of this collection
        status:
          type: string
          description: Status of this collection
          enum:
          - INACTIVE
          - ACTIVE
          - SYNC_IN_PROGRESS
          - FOR_DELETION
        type:
          type: string
          description: Type of this collection
          enum:
          - CUSTOM
          - AUTOMATED
        media:
          $ref: '#/components/schemas/CollectionMedia'
        date_created:
          type: string
          description: Date of creation of this collection on platform
          format: date-time
        date_last_modified:
          type: string
          description: Date of last update of this collection on platform
          format: date-time
      description: Offers Collection
    CollectionMedia:
      type: object
      properties:
        source_url:
          type: string
          description: Source URL
        alt:
          type: string
          description: Alt
        height:
          type: integer
          description: Height
          format: int32
        width:
          type: integer
          description: Width
          format: int32
        date_created:
          type: string
          description: Date of media creation on platform
          format: date-time
      description: Collection Media
    Condition:
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        weight:
          $ref: '#/components/schemas/Weight'
        type:
          type: string
          description: "Condition type, whether it's price or weight based."
          nullable: true
          enum:
          - TOTAL_PRICE
          - TOTAL_WEIGHT
        operator:
          type: string
          description: Operator indicating if the price or weight is >= or <= the
            condition value.
          nullable: true
          enum:
          - LESS_THAN_OR_EQUAL_TO
          - GREATER_THAN_OR_EQUAL_TO
      description: Conditions that must be met for the method to be available.
      nullable: true
    Media:
      required:
      - album_id
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        album_id:
          type: integer
          description: Album ID
          format: int64
        external_id:
          type: string
          description: The ID of the media in the merchants store.
          nullable: true
        cloud_id:
          type: string
          description: The unique ID of hosted cloud entity. Only present on media
            from self-hosted platforms.
          nullable: true
        url:
          type: string
          description: The URL that should be used when displaying media within your
            app. For cloud hosted commerce platforms that provide a CDN this will
            often be the same as the `source_url` property. For self-hosted platforms
            this will typically be a Violet CDN URL.
        source_url:
          type: string
          description: The original URL from the merchants system.
        type:
          type: string
          description: Media Type
          enum:
          - IMAGE
          - VIDEO
        display_order:
          type: integer
          description: The order in which the merchant displayed the media in relation
            to other media in the same collection.
          format: int32
        alt_text:
          maxLength: 512
          type: string
          description: Text describing the media. This value is sourced from the merchant.
          nullable: true
        primary:
          type: boolean
          description: If the media is the primary or default image in the merchants
            store for an Offer or Sku. This is typically the cover image on a product
            details page.
      description: Product and SKU Media
    MetaObject:
      type: object
      properties:
        version:
          type: number
          description: Schema version
          format: double
        type:
          type: string
          description: Type of the value
          enum:
          - STRING
          - JSON
          - INTEGER
          - LONG
          - DECIMAL
          - BOOLEAN
        external_type:
          type: string
          description: Type of the value in the external commerce platform
        key:
          type: string
          description: The key of meta value
        value:
          type: object
          description: The meta value. Values of type JSON will be stringified
        external_id:
          type: string
          description: ID of the meta object in the external commerce platform
        source:
          type: string
          description: "The source the meta object originated from, either EXTERNAL\
            \ or INTERNAL, with EXTERNAL representing data from the external commerce\
            \ platform"
          enum:
          - INTERNAL
          - EXTERNAL
      description: Meta Object
      nullable: true
    Method:
      type: object
      properties:
        external_id:
          type: string
          description: ID of the shipping method in the external commerce system.
          nullable: true
        name:
          type: string
          description: Name of the shipping method as provided by the merchant.
          nullable: true
        price:
          $ref: '#/components/schemas/Price'
        regions:
          $ref: '#/components/schemas/Regions'
        conditions:
          type: array
          description: Conditions that must be met for the method to be available.
          nullable: true
          items:
            $ref: '#/components/schemas/Condition'
      description: List of available shipping methods for this Offer.
      nullable: true
    Offer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product_id:
          type: string
          description: "The parent/container product ID. Note: this is a legacy property\
            \ and is now considered deprecated."
          deprecated: true
        external_id:
          type: string
          description: The ID of the product in the merchants external store.
        external_url:
          type: string
          description: The URL to the product page in the merchants store.
        name:
          type: string
          description: Name of the offer.
        description:
          maxLength: 65000
          type: string
          description: "Description of the offer. Note: this value may contain HTML\
            \ elements."
          nullable: true
        source:
          type: string
          description: Commerce platform the offer was sourced from.
          enum:
          - OTHER
          - SHOPIFY
          - MAGENTO
          - MAGENTO_ONE
          - WOOCOMMERCE
          - BIGCOMMERCE
          - LIGHTSPEED
          - ECWID
          - YAAS
          - SPREECOMMERCE
          - DEMANDWARE
          - VOLUSION
          - PRESTASHOP
          - THREEDCART
          - SYLIUS
          - WIX
          - SWELL
          - MIVA
          - WEBSPHERE
          - ORACLECC
          - SAPCC
          - SQUARESPACE
          - SHOPWARE
          - COMMERCETOOLS
          - MEDUSA
          - ABICART
          - SPRYKER
          - MYSTORE
          - CENTRA
          - XCART
          - VTEX
          - KIBO
          - SALEOR
          - VENDO
          - CHORD
          - DIGITALRIVER
          - SQUARE
          - AMAZON
          - BIGCARTEL
          - CUSTOM
        seller:
          type: string
          description: Name of merchant selling product.
          nullable: true
          example: Foot Locker
        vendor:
          type: string
          description: Name of source vendor or brand.
          nullable: true
          example: Nike
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        available:
          type: boolean
          description: Is the product available for purchase.
        visible:
          type: boolean
          description: "Is the product hidden in the merchants store. Note: a product\
            \ can be hidden while still being available for purchase."
        min_price:
          type: integer
          description: Minimum Price the Offer sells for.
          format: int32
        max_price:
          type: integer
          description: Maximum Price the Offer sells for.
          format: int32
        currency:
          type: string
          description: Base Currency of Offer. Intended for reference only. The currency
            property of the SKU is the currency source of truth.
        source_category_name:
          type: string
          description: Original Category on Source Platform
          nullable: true
        metadata:
          uniqueItems: true
          type: array
          description: Additional Meta Data of the Offer
          nullable: true
          items:
            $ref: '#/components/schemas/MetaObject'
        variants:
          uniqueItems: true
          type: array
          description: "Product variations configured by the merchant in their external\
            \ store. Note: Variations can have any name the merchant chooses to use.\
            \ There is no pre-defined set of possible variants or variant values."
          items:
            $ref: '#/components/schemas/Variant'
        skus:
          uniqueItems: true
          type: array
          description: Sku's are unique combinations of Variants the compose a purchasable
            entity. When placing orders a Sku is the item that will be purchased.
          items:
            $ref: '#/components/schemas/Sku'
        albums:
          uniqueItems: true
          type: array
          description: "Grouped of media for the Offer. Note: For most commerce platforms\
            \ there will only be a single album per Offer."
          items:
            $ref: '#/components/schemas/Album'
        type:
          type: string
          description: "Type of product. Note: Offers with a type of `BUNDLED` cannot\
            \ be purchased through the API at this time due to ecom platform limitations."
          enum:
          - PHYSICAL
          - DIGITAL
          - VIRTUAL
          - BUNDLED
        status:
          type: string
          description: Current status of the Offer.
          enum:
          - UNAVAILABLE
          - AVAILABLE
          - DISABLED_UNAVAILABLE
          - DISABLED_AVAILABLE
          - FOR_DELETION
          - ARCHIVED
        publishing_status:
          type: string
          description: Publishing Status
          enum:
          - NOT_PUBLISHED
          - PUBLISHED
        date_created:
          type: string
          description: Date of offer creation in ISO 8601 format.
          format: date-time
        date_last_modified:
          type: string
          description: Date of last offer update in ISO 8601 format.
          format: date-time
        date_last_consolidated:
          type: string
          description: Date of last consolidation in ISO 8601 format. This date is
            jittered for performance reasons and can be in the future
          format: date-time
        three_d_enabled:
          type: boolean
          description: Is the product 3D Enabled
          nullable: true
          default: false
        three_d_resource:
          type: string
          description: 3D Resource Object
          nullable: true
        commission_rate:
          type: number
          description: Amount given by merchant
          format: double
        currency_symbol:
          type: string
          description: Symbol representing the desired currency
          nullable: true
        presented_currency:
          type: string
          description: The presented currency of this SKU
        default_image_url:
          type: string
          description: The default image for this Offer. Only present on responses
            from the Search API. In other cases this value will be on the album's
            primary media object.
        subscription_status:
          type: string
          description: Subscription status
          enum:
          - NOT_SUBSCRIBED
          - SUBSCRIBED
        external_data:
          type: object
          description: The raw external product data from the external commerce platform
        collections:
          uniqueItems: true
          type: array
          description: Collections this offer belongs to
          items:
            $ref: '#/components/schemas/Collection'
        shipping:
          $ref: '#/components/schemas/Shipping'
        tags:
          type: array
          items:
            type: string
      description: Product Offer
    Price:
      type: object
      properties:
        amount:
          type: integer
          description: Price in cents.
          format: int32
        currency:
          type: string
          description: ISO 4217 Currency Code
          nullable: true
          enum:
          - USD
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BWP
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - ISK
          - JMD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KRW
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SZL
          - THB
          - TJS
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - UYU
          - UZS
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - BTN
      description: Price in cents required to enable the shipping method.
      nullable: true
    Regions:
      type: object
      properties:
        countries:
          type: array
          description: List of ISO 3166 Country Codes
          nullable: true
          items:
            type: string
            description: List of ISO 3166 Country Codes
            nullable: true
            enum:
            - US
            - AU
            - AT
            - BE
            - CA
            - DK
            - FI
            - FR
            - DE
            - HK
            - IE
            - IT
            - JP
            - LU
            - MX
            - NL
            - NZ
            - "NO"
            - PT
            - SG
            - ES
            - SE
            - CH
            - GB
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IM
            - IL
            - JM
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - FM
            - MD
            - MC
            - MN
            - ME
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - AN
            - NC
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - RS
            - SC
            - SL
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
      description: Regions this shipping method is enabled for.
      nullable: true
    Shipping:
      type: object
      properties:
        message:
          type: string
          description: Context regarding the shipping data for this Offer.
          nullable: true
        methods:
          type: array
          description: List of available shipping methods for this Offer.
          nullable: true
          items:
            $ref: '#/components/schemas/Method'
      description: "[ALPHA] - Shipping data for the Offer."
      nullable: true
      readOnly: true
    Sku:
      required:
      - currency
      - merchant_id
      - offer_id
      - sale_price
      - type
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        offer_id:
          type: integer
          description: ID of the parent Offer that this Sku is a child of.
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant that originated the Sku.
          format: int32
        external_id:
          type: string
          description: The ID of the Sku in the merchants external store.
        name:
          type: string
          description: Sku Name
        asin:
          type: string
          description: Amazon Standard Identification Number
          nullable: true
        gtin:
          type: string
          description: Global Trade Item Number
          nullable: true
        upc:
          type: string
          description: Universal Product Code
          nullable: true
        ean:
          type: string
          description: European Article Number
          nullable: true
        isbn:
          type: string
          description: International Standard Book Number
          nullable: true
        in_stock:
          type: boolean
          description: Is the Sku in stock in the merchants external store.
        quantity_available:
          type: integer
          description: The total quantity of this Sku available for purchase.
          format: int32
        inventory_tracked:
          type: boolean
          description: Is the Sku's inventory tracked in the merchants system. Untracked
            inventory can be oversold even when the available quantity is 0.
        sale_price:
          type: integer
          description: Sale Price of the Sku. This is the actual sale cost when the
            Sku is purchased.
          format: int32
        retail_price:
          type: integer
          description: Retail Price of the Sku. This is the recommended or common
            price of the Sku and is typically not what the customer will be charged..
          format: int32
        currency:
          type: string
          description: The base currency of this Sku.
        presented_currency:
          type: string
          description: The presented currency of this Sku.
        taxable:
          type: boolean
          description: Is the Sku taxable.
        tax_type:
          type: string
          description: Type of Tax on this Sku.
          enum:
          - DEFAULT
          - APPAREL
          - SERVICE
        albums:
          uniqueItems: true
          type: array
          description: Sku Albums
          nullable: true
          items:
            $ref: '#/components/schemas/Album'
        variant_values:
          uniqueItems: true
          type: array
          description: Variant Values that apply to this SKU
          nullable: true
          items:
            $ref: '#/components/schemas/SkuVariantValue'
        type:
          type: string
          enum:
          - PHYSICAL
          - DIGITAL
          - VIRTUAL
          - BUNDLED
        status:
          type: string
          description: SKU Status
          enum:
          - UNAVAILABLE
          - AVAILABLE
          - DISABLED_UNAVAILABLE
          - DISABLED_AVAILABLE
          - FOR_DELETION
          - ARCHIVED
        date_created:
          type: string
          description: Date when the Sku was first created in Violet.
          format: date-time
        date_last_modified:
          type: string
          description: Date when the Sku was last updated in Violet.
          format: date-time
        sku_dimensions:
          $ref: '#/components/schemas/SkuDimensions'
        shipping_dimensions:
          $ref: '#/components/schemas/SkuDimensions'
        display_order:
          type: integer
          description: The order that the merchant has chosen to display this Sku
            in relation to other Sku's that are children of the same Offer.
          format: int32
      description: Stock Keeping Unit
    SkuDimensions:
      type: object
      properties:
        sku_id:
          type: integer
          description: ID of SKU Dimensions Belong To
          format: int64
        weight:
          type: number
          description: Weight of SKU
          format: double
        height:
          type: number
          description: Height of SKU
          format: double
        width:
          type: number
          description: Width of SKU
          format: double
        length:
          type: number
          description: Length of SKU
          format: double
        type:
          type: string
          description: Dimensions Type
          enum:
          - SKU
          - SHIPPING
      description: Individual Sku Dimensions
      nullable: true
    SkuVariantValue:
      required:
      - value
      - variant
      type: object
      properties:
        variant:
          type: string
          description: Variant Name
        value:
          type: string
          description: Variant Value
      description: Individual Variation Value for a Sku
      nullable: true
    Variant:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        product_variant_id:
          type: string
          description: ID of the Product Variant
          deprecated: true
        external_id:
          type: string
          description: ID of the Variant on the External Ecommerce Platform
        name:
          type: string
          description: The name given to the Variant by the merchant.
        visual:
          type: boolean
          description: "Is the variant a visual characteristic. Common examples of\
            \ this would be Color, Pattern, or Material."
        values:
          uniqueItems: true
          type: array
          description: Variant Values
          items:
            $ref: '#/components/schemas/VariantValue'
        display_order:
          type: integer
          description: The order the variants are displayed in.
          format: int32
      description: Variation Data
    VariantValue:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        product_variant_value_id:
          type: string
          description: ID of the Product Variation Value
        external_id:
          type: string
          description: ID of the Variant in the External Ecommerce Platform
        name:
          type: string
          description: Variant Value Name
        sku_ids:
          uniqueItems: true
          type: array
          description: ID's of SKU's containing this Variant Value
          items:
            type: integer
            description: ID's of SKU's containing this Variant Value
            format: int64
        display_order:
          type: integer
          description: The order the variant values are displayed in.
          format: int32
      description: Individual Variation Value
    VioletPageOffer:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            $ref: '#/components/schemas/Offer'
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    Weight:
      type: object
      properties:
        value:
          type: number
          description: Weight value
          format: double
          nullable: true
        unit:
          type: string
          nullable: true
          enum:
          - INCHES
          - FEET
          - CENTIMETERS
          - OUNCES
          - POUNDS
          - GRAMS
          - KILOGRAMS
          - CARATS
          - YARDS
          - MILLIMETERS
          - TONNES
          - MILLIGRAMS
          - LITERS
          - MILLILITERS
          - QUARTS
          - QUARTERS
          - GALLONS
          - PINTS
          - METERS
          - OUNCES
          - POUNDS
          - GRAMS
          - KILOGRAMS
          - TONNES
      description: Weight required to enable the shipping method.
      nullable: true
    ProductCount:
      type: object
      properties:
        count:
          type: integer
          format: int32
        publishedCount:
          type: integer
          format: int32
        notPublishedCount:
          type: integer
          format: int32
    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: integer
          format: int32
        id:
          type: object
        ids:
          type: array
          items:
            type: object
    ScoredCategory:
      required:
      - depth
      - name
      - slug
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          description: Category Name
        slug:
          type: string
          description: Category Slug
        parent_id:
          type: string
          description: Parent ID
        depth:
          type: integer
          description: Category Depth
          format: int32
        score:
          type: number
          format: float
      description: Scored Category
    VioletPageScoredCategory:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            $ref: '#/components/schemas/ScoredCategory'
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    OfferSearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Used with the beta flag. A NLP-based search query
        visible:
          type: boolean
          description: Filter by visible offers
        available:
          type: boolean
          description: Filter by available offers
        id:
          type: integer
          format: int64
        merchant_id:
          type: integer
          format: int32
        seller:
          type: string
          description: Name of Merchant Selling Product
        vendor:
          type: string
          description: Name of Original Vendor (Brand)
        product_id:
          type: string
          description: The parent/container product ID
        external_id:
          type: string
          description: External ID
        name:
          type: string
          description: Name of Product in Offer
        publishing_status:
          type: string
          description: Publishing status
          enum:
          - NOT_PUBLISHED
          - PUBLISHED
        subscription_status:
          type: string
          description: Subscription status
          enum:
          - NOT_SUBSCRIBED
          - SUBSCRIBED
        status:
          type: string
          description: Offer status
          enum:
          - UNAVAILABLE
          - AVAILABLE
          - DISABLED_UNAVAILABLE
          - DISABLED_AVAILABLE
          - FOR_DELETION
          - ARCHIVED
        source_category_name:
          type: string
          description: Offer category from ecom-platform
        tags:
          type: array
          description: Tags to search for
          items:
            type: string
            description: Tags to search for
        merchant_ids:
          type: array
          description: Merchant Ids to filter by
          items:
            type: integer
            description: Merchant Ids to filter by
            format: int32
        min_price:
          type: integer
          description: Minimum Price
          format: int32
        max_price:
          type: integer
          description: Maximum Price
          format: int32
        sort_by:
          type: string
          description: Property to sort by in camelCase
        sort_direction:
          type: string
          description: Direction to sort by
      description: Offer Search Request
    VioletPageLong:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            type: integer
            description: The actual content of the response; A list of the result
              objects
            format: int64
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    VioletPageCollection:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            $ref: '#/components/schemas/Collection'
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    Latest:
      type: object
      properties:
        success:
          type: boolean
        timestamp:
          type: integer
          format: int64
        base:
          type: string
        date:
          type: string
        rates:
          type: object
          additionalProperties:
            type: number
            format: double
