openapi: 3.0.1
info:
  title: Order-Service
  description: Order Service API
  contact:
    name: Violet.io
    url: https://violet.io
  version: v1
servers:
- url: https://sandbox-api.violet.io/v1
tags:
- name: Checkout - Cart
- name: Checkout - Items
- name: Checkout - Discounts
- name: Checkout - Customer
- name: Checkout - Shipping
- name: Checkout - Payment
- name: Checkout - Completion
- name: Orders
- name: Refunds
- name: Cancellations
paths:
  /checkout/cart/{cart_id}/discounts:
    post:
      tags:
      - Checkout - Discounts
      summary: Add Discount to Cart
      operationId: addDiscountToCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/skus:
    post:
      tags:
      - Checkout - Items
      summary: Add SKU to Cart
      operationId: addSkuToCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      - name: async
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSku'
            example:
              sku_id: 12345
              quantity: 1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/billing_address:
    put:
      tags:
      - Checkout - Customer
      summary: Update Billing Address
      operationId: updateBillingAddress
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
            example:
              address_1: 42 Wallaby Way
              city: Sydney
              country: AU
              postal_code: 4000
              state: NSW
              type: SHIPPING
              phone: 1234567890
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    post:
      tags:
      - Checkout - Customer
      summary: Set Billing Address
      operationId: applyBillingAddress
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
            example:
              address_1: 42 Wallaby Way
              city: Sydney
              country: AU
              postal_code: 4000
              state: NSW
              type: SHIPPING
              phone: 1234567890
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/customer:
    post:
      tags:
      - Checkout - Customer
      summary: Apply Guest Customer to Cart
      operationId: applyGuestCustomerToCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: async
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCustomer'
            example:
              email: p.sherman@findingnemo.com
              first_name: P
              last_name: Sherman
              shipping_address:
                address_1: 42 Wallaby Way
                city: Sydney
                country: AU
                postal_code: 4000
                state: NSW
                type: SHIPPING
                phone: 1234567890
              same_address: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/payment:
    post:
      tags:
      - Checkout - Payment
      summary: Apply Payment Method
      operationId: applyPaymentMethod
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
            example:
              card_number: '4242424242424242'
              card_cvc: 111
              card_exp_month: 12
              card_exp_year: 29
              card_postal_code: '11211'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/shipping_address:
    put:
      tags:
      - Checkout - Customer
      summary: Update Shipping Address
      operationId: updateShippingAddress
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
            example:
              address_1: 42 Wallaby Way
              city: Sydney
              country: AU
              postal_code: 4000
              state: NSW
              type: SHIPPING
              phone: 1234567890
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    post:
      tags:
      - Checkout - Customer
      summary: Set Shipping Address
      operationId: applyShippingAddress
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAddress'
            example:
              address_1: 42 Wallaby Way
              city: Sydney
              country: AU
              postal_code: 4000
              state: NSW
              type: SHIPPING
              phone: 1234567890
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/shipping:
    post:
      tags:
      - Checkout - Shipping
      summary: Set Shipping Methods
      operationId: applyShippingMethods
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BagShippingMethod'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/authorize:
    post:
      tags:
      - Checkout - Authorization
      summary: Authorize Payment Method
      operationId: authorizePaymentMethod
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /carts/estimate:
    post:
      tags:
      - Orders
      summary: Estimate Cart - BETA
      operationId: calculateCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateCartRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateCartResponse'
  /orders/{order_id}/bags/{bag_id}/cancel:
    post:
      tags:
      - Cancellations
      summary: Cancel Bag
      operationId: cancelBag
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: bag_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
            example:
              notify_customer: false
              reason_code: CUSTOMER
              reason: Customer requested refund.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancellation'
  /orders/{order_id}/cancel:
    post:
      tags:
      - Cancellations
      summary: Cancel Order
      operationId: cancelOrder
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
            example:
              notify_customer: false
              reason_code: CUSTOMER
              reason: Customer requested refund.
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancellation'
  /checkout/cart:
    post:
      tags:
      - Checkout - Cart
      summary: Create Cart
      operationId: createCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: app_order_id
        in: query
        schema:
          type: string
          description: "Deprecated: Use request body instead."
          deprecated: true
      - name: base_currency
        in: query
        schema:
          type: string
          description: "Deprecated: Use request body instead."
          deprecated: true
      - name: referral_id
        in: query
        schema:
          type: string
          description: "Deprecated: Use request body instead."
          deprecated: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartInitializationRequest'
            example:
              base_currency: USD
              skus:
              - sku_id: 12345
                quantity: 1
              customer:
                email: p.sherman@findingnemo.com
                first_name: P
                last_name: Sherman
                shipping_address:
                  address_1: 42 Wallaby Way
                  city: Sydney
                  country: AU
                  postal_code: 4000
                  state: NSW
                  type: SHIPPING
                  phone: 1234567890
                same_address: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders:
    get:
      tags:
      - Orders
      summary: Get Orders
      operationId: getAllOrders
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageOrder'
    post:
      tags:
      - Orders
      summary: Create Order
      operationId: createOrder
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
            example:
              payment_method:
                type: SINGLE_USE_CARD_TOKEN
                payment_provider: STRIPE
                token: tok_i1s2h8a9nyg1ukrju12h31kj212kh
              order:
                app_order_id: mario-test-1
                customer:
                  first_name: Ultra
                  last_name: Violet
                  email: super@mar.io
                bags:
                  - skus:
                      - sku_id: 80455
                        price: 100000
                    shipping_method:
                      carrier: OTHER
                      label: Teleportation
                      price: 10000
                    tax_total: 10000
                shipping_address:
                  address_1: 2815 Elliott Ave
                  address_2: Unit 100
                  city: Seattle
                  state: WA
                  country: US
                  postal_code: '98121'
                billing_address:
                  address_1: 200 West Street
                  city: New York
                  state: NY
                  country: US
                  postal_code: '10282'
                currency: USD
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              example:
                id: 54609
                token: f9bd116404dc4441838a94f31a942d5f
                errors: []
                app_id: 10193
                developer_id: 10122
                customer:
                  first_name: Ultra
                  last_name: Violet
                  email: super@mar.io
                  name: Ultra Violet
                bags:
                  - id: 64579
                    order_id: 54609
                    merchant_id: 10064
                    status: ACCEPTED
                    fulfillment_status: PROCESSING
                    financial_status: PAID
                    skus:
                      - id: 60509
                        merchant_id: 10064
                        app_id: 10193
                        product_id: 815b064726de41d9a21de4bfc029416f
                        sku_id: 80445
                        external_id: '42519630413999'
                        name: Lunar Lemonade - 10 oz.
                        brand: Space Drinks
                        thumbnail: https://cdn.shopify.com/s/files/1/0621/1849/4383/files/wealthy_lunar_lemonade_4a9c0731-8758-4847-91e1-d6d37d6ace22.png
                        quantity: 1
                        price: 100000
                        weight: 3
                        available: true
                        status: PROCESSING
                        product_type: PHYSICAL
                        line_price: 100000
                    shipping_method:
                      type: FLAT_RATE_PRICE
                      carrier: OTHER
                      label: Teleportation
                      price: 10000
                      custom: false
                      id: 21839
                      merchant_id: 10064
                    taxes:
                      - order_id: 54609
                        merchant_id: 10064
                        state: WA
                        rate: 10
                        amount: 10000
                    sub_total: 100000
                    shipping_total: 10000
                    tax_total: 10000
                    total: 120000
                    taxes_included: false
                    transactions: [ ]
                    external_checkout: false
                    commission_rate: 0
                    date_created: '2024-06-28T20:31:56+0000'
                    date_last_modified: '2024-06-28T20:31:56.000+00:00'
                    remorse_period_ends: '2024-07-28T20:31:56+0000'
                    currency: USD
                    external_currency: USD
                    channel: MARKETPLACE
                    app_order_id: ishan-test-1
                    platform: SHOPIFY
                    fulfillments: [ ]
                    discounts: [ ]
                    wallet_based_checkout: false
                    bag_id: 64579
                    bag_status: ACCEPTED
                    merchant_name: Space Drinks
                shipping_address:
                  name: Ultra Violet
                  city: Seattle
                  state: WA
                  country: US
                  postal_code: '98121'
                  type: BILLING
                  address_1: 2815 Elliott Ave
                  address_2: Unit 100
                  first_name: Ultra
                  last_name: Violet
                billing_address:
                  name: Ultra Violet
                  city: New York
                  state: NY
                  country: US
                  postal_code: '10282'
                  type: BILLING
                  address_1: 200 West Street
                  first_name: Ultra
                  last_name: Violet
                payment_transactions:
                  - id: 31464
                    order_id: 54627
                    payment_provider: STRIPE
                    payment_provider_transaction_id: pi_3PXoWvK29KDiBVld1n7ym4B0
                    payment_method_id: 10630
                    payment_provider_payment_method_id: pm_1PXoWvK29KDiBVldLNqe04Oi
                    payment_intent_client_secret: pi_3PXoWvK29KDiBVld1n7ym4B0_secret_tB77zb3BoTCKigUe5R38hrCKS
                    amount: 120000
                    metadata:
                      payment_intent_client_secret: pi_3PXoWvK29KDiBVld1n7ym4B0_secret_tB77zb3BoTCKigUe5R38hrCKS
                      payment_intent_id: pi_3PXoWvK29KDiBVld1n7ym4B0
                    currency: USD
                    status: CAPTURED
                    errors: [ ]
                    date_created: '2024-07-01T18:00:45+0000'
                    date_last_modified: '2024-07-01T18:00:48+0000'
                sub_total: 0
                shipping_total: 0
                tax_total: 0
                total: 0
                app_order_id: mario-test-1
                status: COMPLETED
                is_guest: true
                date_created: '2024-06-28T20:31:56+0000'
                date_last_modified: '2024-06-28T20:31:56+0000'
                priced: true
                wallet_based_checkout: false
                currency: USD
                channel: MARKETPLACE
                currency_symbol: "$"
                intent_based_checkout: true
                order_status: COMPLETED
                order_id: 54609
                guest: true
  /checkout/cart/{cart_id}:
    get:
      tags:
      - Checkout - Cart
      summary: Get Cart by ID
      operationId: getCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
      - Checkout - Cart
      summary: Delete Cart
      operationId: deleteCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /checkout/cart/{cart_id}/shipping/available:
    get:
      tags:
      - Checkout - Shipping
      summary: Get Available Shipping Methods
      operationId: getAvailableShippingMethods
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: available shipping methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderShippingMethodWrapper'
              examples:
                Has Available Shipping Methods:
                  description: Has Available Shipping Methods
                  value:
                  - bag_id: 99999
                    shipping_methods:
                    - carrier: OTHER
                      label: Free Ground Shipping
                      price: 0
                      shipping_method_id: 904508f53e55effda7fe3ed2aee21132
                      bag_id: 99999
                      merchant_id: 11111
                    - carrier: USPS
                      label: Priority Mail
                      price: 664
                      shipping_method_id: 07d19139fc0f4558687c1900c696f071
                      bag_id: 99999
                      merchant_id: 11111
                No Available Shipping Methods:
                  description: No Available Shipping Methods
                  value:
                  - bag_id: 99999
                    shipping_methods: []
        "404":
          description: order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Order Not Found:
                  description: Order Not Found
                  value:
                    message: Order could not be found.
                    error: order_not_found
                    code: 4216
  /orders/{order_id}/bags/{bag_id}/refunds:
    get:
      tags:
      - Refunds
      summary: Get Bag Refunds
      operationId: getBagRefunds
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: bag_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Refund'
  /checkout/cart/byToken/{token}:
    get:
      tags:
      - Checkout - Cart
      summary: Get Cart by Token
      operationId: getCartByToken
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: token
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{order_id}:
    get:
      tags:
      - Orders
      summary: Get Order by ID
      operationId: getOrderById
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: sandbox
        in: query
        schema:
          type: boolean
          default: false
      - name: include
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{order_id}/cancellations:
    get:
      tags:
      - Cancellations
      summary: Get Order Cancellations
      operationId: getOrderCancellations
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancellation'
  /orders/{order_id}/refunds/{refund_id}:
    get:
      tags:
      - Refunds
      summary: Get Order Refund by ID
      operationId: getOrderRefundById
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: refund_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
  /orders/{order_id}/refunds:
    get:
      tags:
      - Refunds
      summary: Get Order Refunds
      operationId: getOrderRefunds
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Refund'
  /checkout/cart/{cart_id}/price:
    get:
      tags:
      - Checkout - Completion
      summary: Price Cart
      operationId: priceCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/discounts/{discount_id}:
    delete:
      tags:
      - Checkout - Discounts
      summary: Remove Discount from Cart
      operationId: removeDiscountFromCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: discount_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/shipping/{shipping_method_id}:
    delete:
      tags:
      - Checkout - Shipping
      summary: Remove Shipping Method
      operationId: removeShippingMethod
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: shipping_method_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /checkout/cart/{cart_id}/skus/{order_sku_id}:
    put:
      tags:
      - Checkout - Items
      summary: Update SKU in Cart
      operationId: updateSkuInCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: order_sku_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      - name: async
        in: query
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSku'
            example:
              quantity: 2
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags:
      - Checkout - Items
      summary: Remove SKU from Cart
      operationId: removeSkuFromCart
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: order_sku_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      - name: async
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/bags/search:
    post:
      tags:
      - Orders
      summary: Search Bags
      operationId: searchBags
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: extended
        in: query
        schema:
          type: boolean
          default: false
      - name: exclude_in_progress
        in: query
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BagSearchRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageBag'
  /orders/search:
    post:
      tags:
      - Orders
      summary: Search Orders
      operationId: searchOrders
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        schema:
          type: integer
          format: int32
          default: 20
      - name: extended
        in: query
        schema:
          type: boolean
          default: false
      - name: exclude_in_progress
        in: query
        schema:
          type: boolean
          default: true
      - name: include
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VioletPageOrder'
  /checkout/cart/{cart_id}/submit:
    post:
      tags:
      - Checkout - Completion
      summary: Submit Cart
      operationId: submitCheckout
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartSubmissionRequest'
            example:
              app_order_id: asdf-ghjk-qwer-tyui
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "409":
          description: order submission in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Submission in Progress:
                  description: Submission in Progress
                  value:
                    message: Order submission is in progress. Please wait for the
                      submission to complete before trying again.
                    error: order_submission_in_progress
                    code: 4238
        "400":
          description: order completion errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Order Completed Error:
                  description: Order Completed Error
                  value:
                    message: Order has already been completed.
                    error: order_completed
                    code: 4222
                External Cart Completion Error:
                  description: External Cart Completion Error
                  value:
                    message: "Could not complete external cart: One or more items\
                      \ in the cart are no longer available for purchase."
                    error: external_cart_completion_error
                    code: 2503
                    data:
                      skus:
                      - message: This item is no longer available for purchase.
                        name: Sample Product
                        sku_id: 99999
                        order_sku_id: 88888
                        bag_id: 77777
        "404":
          description: order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Order Not Found Exception:
                  description: Order Not Found Exception
                  value:
                    message: Order could not be found.
                    error: order_not_found
                    code: 4216
  /checkout/cart/{cart_id}/payment/update:
    post:
      tags:
      - Checkout - Payment
      summary: Update Payment Transaction
      operationId: updatePaymentTransaction
      parameters:
      - name: X-Violet-Token
        in: header
        schema:
          type: string
      - name: X-Violet-App-Secret
        in: header
        schema:
          type: string
      - name: X-Violet-App-Id
        in: header
        schema:
          type: integer
          format: int32
      - name: cart_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: price_cart
        in: query
        schema:
          type: boolean
          default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    Bag:
      required:
      - app_id
      - merchant_id
      - order_id
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the Bag.
          format: int64
          readOnly: true
        order_id:
          type: integer
          description: ID of the parent order the Bag is a child of.
          format: int64
        merchant_id:
          type: integer
          description: ID of the merchant the Bag is related to.
          format: int32
        app_id:
          type: integer
          description: ID of the App responsible for the creation and submission of
            this Order.
          format: int32
        external_id:
          type: string
          description: ID of the Order on the external commerce platform. This value
            will be `null` until the Order submitted.
          nullable: true
        status:
          type: string
          description: Overall status of the Bag.
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - ACCEPTED
          - COMPLETED
          - PARTIALLY_REFUNDED
          - REFUNDED
          - REJECTED
          - CANCELED
          - BACKORDERED
        fulfillment_status:
          type: string
          description: Fulfillment status of the Bag.
          enum:
          - PROCESSING
          - SHIPPED
          - PARTIALLY_SHIPPED
          - DELIVERED
          - COULD_NOT_DELIVER
          - RETURNED
        financial_status:
          type: string
          description: Financial status of the Bag.
          enum:
          - UNPAID
          - AUTHORIZED
          - PENDING
          - PAID
          - PARTIALLY_PAID
          - REFUNDED
          - PARTIALLY_REFUNDED
          - VOIDED
        skus:
          type: array
          description: Sku's (line items) that have been added to the Bag.
          items:
            $ref: '#/components/schemas/OrderSku'
        shipping_method:
          $ref: '#/components/schemas/OrderShippingMethod'
        taxes:
          type: array
          description: Tax rates applied to the Bag.
          nullable: true
          items:
            $ref: '#/components/schemas/OrderTax'
        sub_total:
          type: integer
          description: "The price of the Bag in the base currency before discounts,\
            \ shipping, duties, taxes, and tips. In Cents."
          format: int32
        shipping_total:
          type: integer
          description: The sum of all shipping methods applied to the Bag in the base
            currency. In Cents
          format: int32
        tax_total:
          type: integer
          description: The sum of all the taxes applied to the Bag in the base currency.
            In Cents
          format: int32
        discount_total:
          type: integer
          description: The total discounts applied to the price of the Bag in the
            base currency. In Cents
          format: int32
        total:
          type: integer
          description: "The sum of all item prices, discounts, shipping, and taxes\
            \ applied to the Bag in the base currency. In Cents"
          format: int32
        taxes_included:
          type: boolean
          description: Are taxes included in the cart subtotal. When `true` the taxes
            will not be summed separately.
          default: false
        transactions:
          type: array
          description: List of transactions applied to the Bag.
          nullable: true
          items:
            $ref: '#/components/schemas/Transaction'
        external_checkout:
          type: boolean
          description: If the Bag is attached to an external cart in the commerce
            platform.
          default: true
        commission_rate:
          type: number
          description: The rate used to calculate the apps commission rate for the
            Bag.
          format: double
        date_created:
          type: string
          description: Date the Bag was created in Violet.
          format: date-time
        date_last_modified:
          type: string
          description: Date the Bag was last modified in Violet.
          format: date-time
        date_last_consolidated:
          type: string
          description: Date the Bag was last checked for updates. This is a part of
            Order Parity and is used to discover missed or unsent webhooks from the
            external commerce platforms.
          format: date-time
        remorse_period_ends:
          type: string
          description: Date when the Bag can no longer be refunded.
          format: date-time
        currency:
          type: string
          description: Base currency of the Bag.
        external_currency:
          type: string
          description: Currency of the equivalent cart on external commerce platform.
        currency_exchange_rate:
          type: number
          description: "Exchange rate of currency and external currency, if different,\
            \ at the time the Bag was last priced."
          nullable: true
        channel:
          type: string
          description: The type of Channel that originated this Bag.
          enum:
          - APP
          - MARKETPLACE
          - FACEBOOK
          - INSTAGRAM
          - WALMART
          - GOOGLE
          - TIKTOK
          - SNAPCHAT
          - PINTEREST
        app_order_id:
          type: string
          description: Optional ID of the Order in the channels system. Automatically
            obtained through the app_order_id applied to the Order.
          nullable: true
        platform:
          type: string
          description: The commerce platform used by this merchant.
          enum:
          - OTHER
          - SHOPIFY
          - MAGENTO
          - MAGENTO_ONE
          - WOOCOMMERCE
          - BIGCOMMERCE
          - LIGHTSPEED
          - ECWID
          - YAAS
          - SPREECOMMERCE
          - DEMANDWARE
          - VOLUSION
          - PRESTASHOP
          - THREEDCART
          - SYLIUS
          - WIX
          - SWELL
          - MIVA
          - WEBSPHERE
          - ORACLECC
          - SAPCC
          - SQUARESPACE
          - SHOPWARE
          - COMMERCETOOLS
          - MEDUSA
          - ABICART
          - SPRYKER
          - MYSTORE
          - CENTRA
          - XCART
          - VTEX
          - KIBO
          - SALEOR
          - VENDO
          - CHORD
          - DIGITALRIVER
          - SQUARE
          - AMAZON
          - BIGCARTEL
          - CUSTOM
        fulfillments:
          uniqueItems: true
          type: array
          description: "A list of fulfillments, if any, that have been applied to\
            \ this Bag."
          nullable: true
          items:
            $ref: '#/components/schemas/BagFulfillment'
        discounts:
          uniqueItems: true
          type: array
          description: "A list of discounts, if any, that have been applied to this\
            \ Bag."
          nullable: true
          items:
            $ref: '#/components/schemas/BagDiscount'
        wallet_based_checkout:
          type: boolean
          description: Is this Bag going to be placed through wallet-based checkout.
          default: false
        app_name:
          type: string
          description: Name of app that originated the order. Use the "extended" query
            param when looking up orders to include this value.
        bag_status:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - ACCEPTED
          - COMPLETED
          - PARTIALLY_REFUNDED
          - REFUNDED
          - REJECTED
          - CANCELED
          - BACKORDERED
        bag_id:
          type: integer
          format: int64
        merchant_name:
          type: string
          description: Name of the merchant the Bag is related to.
      description: Per Merchant Bag in Order
    BagDiscount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        bag_id:
          type: integer
          description: ID of the Bag this discount belong to
          format: int64
        status:
          type: string
          description: Status of discount
          enum:
          - PENDING
          - APPLIED
          - INVALID
          - NOT_SUPPORTED
          - ERROR
          - EXPIRED
        type:
          type: string
          description: Type of discount
          enum:
          - CODE
        value_type:
          type: string
          description: Value type of discount
          enum:
          - AMOUNT
          - PERCENTAGE
        target_type:
          type: string
          description: Target type of the discount
          enum:
          - ORDER
          - SKU
          - SHIPPING
        code:
          type: string
          description: Code of discount
        external_id:
          type: string
          description: External ID of discount
        amount:
          type: integer
          description: Amount of discount
          format: int32
        percentage:
          type: number
          description: Percentage of discount
          format: double
        amount_total:
          type: integer
          description: Total amount of discount applied to bag
          format: int32
        date_created:
          type: string
          description: Date of creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last bag discount update
          format: date-time
        email:
          type: string
          description: "Customer email address, possibly necessary for once-per-customer\
            \ discounts."
      description: Bag Discount
      nullable: true
    BagFulfillment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        bag_id:
          type: integer
          description: ID of the bag the fulfillment belongs to.
          format: int64
        external_id:
          type: string
          description: ID of the fulfillment on the external commerce platform.
        carrier:
          type: string
          description: Carrier responsible for the fulfillment. Will be OTHER if raw
            carrier is not recognized.
          enum:
          - OTHER
          - UPS
          - USPS
          - FEDEX
          - DHL
          - ONTRAC
          - ROYAL_MAIL
          - SENDLE
          - POSTNORD
        raw_carrier:
          type: string
          description: Raw name of carrier from the external commerce platform.
        status:
          type: string
          description: Status of the bag fullfillment.
          enum:
          - PENDING
          - PROCESSING
          - SUCCESS
          - CANCELED
          - ERROR
          - FAILURE
          - NONE_PROVIDED
        carrier_status:
          type: string
          description: Status provided by the carrier.
          enum:
          - PENDING
          - LABEL_PURCHASED
          - LABEL_PRINTED
          - CONFIRMED
          - READY_FOR_PICKUP
          - IN_TRANSIT
          - OUT_FOR_DELIVERY
          - ATTEMPTED_DELIVERY
          - DELIVERED
          - FAILURE
          - NONE_PROVIDED
        tracking_number:
          type: string
          description: Tracking number provided by the carrier.
        tracking_url:
          type: string
          description: Tracking URL provided by the carrier.
        skus:
          uniqueItems: true
          type: array
          description: SKUs fulfilled by this fulfillment.
          items:
            $ref: '#/components/schemas/BagFulfillmentSku'
      description: A Bag Fulfillment
      nullable: true
    BagFulfillmentSku:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        fulfillment_id:
          type: integer
          description: ID of the fulfillment that contains this item.
          format: int64
        order_sku_id:
          type: integer
          description: ID of the SKU in the Bag.
          format: int64
        quantity_fulfilled:
          type: integer
          description: Quantity of the this item fulfilled by this fulfillment.
          format: int32
      description: A bag fulfillment sku
    Order:
      required:
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        token:
          type: string
          readOnly: true
        errors:
          type: array
          description: "Errors on the Order. During checkout, if there was an error\
            \ or issue on one of the order's bags, there will be an error added to\
            \ this list describing the issue. The checkout API will return 200 with\
            \ the order object in the response even if there was an issue with a bag\
            \ so you must always check the response for errors in this list to know\
            \ if there was an issue on the order."
          items:
            $ref: '#/components/schemas/OrderError'
        user_id:
          type: integer
          description: ID of the User placing the order
          format: int64
          deprecated: true
        app_id:
          type: integer
          description: ID of the App responsible for the creation and submission of
            this Order.
          format: int32
        developer_id:
          type: integer
          description: ID of the Developer responsible for the creation and submission
            of this Order.
          format: int32
        customer:
          $ref: '#/components/schemas/OrderCustomer'
        bags:
          type: array
          description: "One or more Bags that make up the Order. Each Bag will contain\
            \ the Sku's, shipping methods, and totals unique to a merchant. Each merchant\
            \ in an Order will have their own Bag."
          items:
            $ref: '#/components/schemas/Bag'
        shipping_address:
          $ref: '#/components/schemas/OrderAddress'
        billing_address:
          $ref: '#/components/schemas/OrderAddress'
        payment_method:
          $ref: '#/components/schemas/OrderPaymentMethod'
        sub_total:
          type: integer
          description: "The price of the Order in the base currency before discounts,\
            \ shipping, duties, taxes, and tips. In Cents."
          format: int32
        shipping_total:
          type: integer
          description: The sum of all shipping methods applied to the Order in the
            base currency. In Cents.
          format: int32
        tax_total:
          type: integer
          description: The sum of all the taxes applied to the Order in the base currency.
            In Cents.
          format: int32
        discount_total:
          type: integer
          description: The total discounts applied to the price of the Order in the
            base currency. In Cents.
          format: int32
        total:
          type: integer
          description: "The sum of all item prices, discounts, shipping, and taxes\
            \ applied to the Order in the base currency. In Cents."
          format: int32
        app_customer_id:
          type: string
          description: App Customer ID. This should be used to map the order to the
            ID of the customer in your application.
        app_order_id:
          type: string
          description: "App Order ID. This should be set to a unique identifier in\
            \ your system. While not enforced unique in Violet's system, it is strongly\
            \ recommended that unique values are used for each cart to help correlate\
            \ identifiers between Violet's system and yours."
        status:
          type: string
          description: Status of the Order
          enum:
          - IN_PROGRESS
          - PROCESSING
          - COMPLETED
          - CANCELED
          - PARTIALLY_REFUNDED
          - REFUNDED
          - REQUIRES_ACTION
        is_guest:
          type: boolean
          description: Order is Guest
        date_created:
          type: string
          description: Date of order creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last order update
          format: date-time
        priced:
          type: boolean
          description: Is the cart priced
        wallet_based_checkout:
          type: boolean
          description: Is this cart going to be placed through wallet-based checkout
        currency:
          type: string
          description: Base currency of cart
        referral_id:
          type: string
          description: Optional value used to represent an identifier in your system.
            This value is not required to represent a referral. It can represent the
            ID of anything in your system and can be used to filter order lookup results.
            Max length of 128 characters.
        currency_symbol:
          type: string
          description: Symbol representing the currency the Order operates in.
        app_name:
          type: string
          description: Name of app that originated the order. Use the "extended" query
            param when looking up orders to include this value.
        stripe_key:
          type: string
          description: Stripe publishable key. Use for tokenizing payment methods.
        payment_intent_client_secret:
          type: string
          description: Payment intent client secret. Use for payment intent based
            payment capture and external captures
        payment_transactions:
          uniqueItems: true
          type: array
          description: Payment Transactions associated to the bags on this Cart
          items:
            $ref: '#/components/schemas/PaymentTransaction'
        order_id:
          type: integer
          format: int64
        guest:
          type: boolean
        order_status:
          type: string
          enum:
          - IN_PROGRESS
          - PROCESSING
          - COMPLETED
          - CANCELED
          - PARTIALLY_REFUNDED
          - REFUNDED
          - REQUIRES_ACTION
        intent_based_checkout:
          type: boolean
          description: Boolean indicating if the cart/order will be payed using a
            payment intent.
      description: Violet Order Entity
    OrderAddress:
      required:
      - address_1
      - city
      - country
      - postal_code
      - state
      - type
      type: object
      properties:
        name:
          type: string
          description: Name on Address
        city:
          type: string
          description: City
        state:
          type: string
          description: State Abbreviation
        country:
          type: string
          description: Country ISO2 Code
        postal_code:
          type: string
          description: Postal/Zip Code
        phone:
          type: string
          description: Phone Number
        type:
          type: string
          description: Address Type
          enum:
          - SHIPPING
          - BILLING
        email:
          type: string
          description: Email Address
        address_1:
          type: string
          description: First line of the Address
        address_2:
          type: string
          description: Second line of the Address
        first_name:
          type: string
        last_name:
          type: string
      description: The shipping or billing address of a user placing an order
    OrderCustomer:
      required:
      - first_name
      - last_name
      type: object
      properties:
        user_id:
          type: integer
          description: ID of the User the Order Customer references
          format: int64
        first_name:
          type: string
          description: Customer's first name.
        last_name:
          type: string
          description: Customer's last name.
        email:
          type: string
          description: Customer's valid email address.
        external_id:
          type: string
          description: ID of the Customer on the External Platform
          nullable: true
        shipping_address:
          $ref: '#/components/schemas/OrderAddress'
        billing_address:
          $ref: '#/components/schemas/OrderAddress'
        same_address:
          type: boolean
          description: Use Same Address for Both
          default: false
        name:
          type: string
      description: The Customer Placing the Order
      nullable: true
    OrderError:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the error.
          format: int64
          readOnly: true
        order_id:
          type: integer
          description: ID of the parent Order this error occurred in.
          format: int64
        bag_id:
          type: integer
          description: ID of the parent Bag this error occurred in.
          format: int64
        entity_id:
          type: string
          description: ID of the entity that caused the error. See the `entity_type`
            property to determine which entity this ID is associated with.
        entity_type:
          type: string
          description: Type of entity that caused the error. See the `entity_id` property
            to determine which entity of this type is related to the error.
          nullable: true
          enum:
          - ORDER
          - BAG
          - SKU
        type:
          type: string
          description: "Type of error, indicates which action was being taken when\
            \ the error occurred."
          enum:
          - EXTERNAL_CREATE_CART
          - EXTERNAL_ADD_ITEM
          - EXTERNAL_UPDATE_ITEM
          - EXTERNAL_REMOVE_ITEM
          - EXTERNAL_ADD_CUSTOMER
          - EXTERNAL_ADD_ADDRESSES
          - EXTERNAL_ADD_SHIPPING_ADDRESS
          - EXTERNAL_ADD_BILLING_ADDRESS
          - EXTERNAL_GET_SHIPPING_METHODS
          - EXTERNAL_SET_SHIPPING_METHOD
          - EXTERNAL_SET_PAYMENT_METHOD
          - EXTERNAL_PRICE_CART
          - EXTERNAL_SUBMIT_CART
          - INTERNAL_ADD_ITEM
          - EXTERNAL_DELETE_CART
          - EXTERNAL_CANCEL_ORDER
          - EXTERNAL_WRITE_ORDER
          - EXTERNAL_MARK_ORDER_AS_PAID
          - EXTERNAL_ADD_DISCOUNT_CODE
          - EXTERNAL_REMOVE_DISCOUNT_CODE
          - EXTERNAL_DELETE_ORDER
          - EXTERNAL_REFUND_ORDER
        message:
          maxLength: 255
          type: string
          description: A string message providing more details about the error.
          nullable: true
        date_created:
          type: string
          description: Date the error was first created in Violet.
          format: date-time
        platform:
          type: string
          description: The external commerce platform the error occurred in.
          enum:
          - OTHER
          - SHOPIFY
          - MAGENTO
          - MAGENTO_ONE
          - WOOCOMMERCE
          - BIGCOMMERCE
          - LIGHTSPEED
          - ECWID
          - YAAS
          - SPREECOMMERCE
          - DEMANDWARE
          - VOLUSION
          - PRESTASHOP
          - THREEDCART
          - SYLIUS
          - WIX
          - SWELL
          - MIVA
          - WEBSPHERE
          - ORACLECC
          - SAPCC
          - SQUARESPACE
          - SHOPWARE
          - COMMERCETOOLS
          - MEDUSA
          - ABICART
          - SPRYKER
          - MYSTORE
          - CENTRA
          - XCART
          - VTEX
          - KIBO
          - SALEOR
          - VENDO
          - CHORD
          - DIGITALRIVER
          - SQUARE
          - AMAZON
          - BIGCARTEL
          - CUSTOM
      description: Order Error
    OrderPaymentMethod:
      required:
      - payment_method_id
      type: object
      properties:
        brand:
          type: string
          description: Brand of Card
        last_four:
          type: string
          description: Last Four Numbers on Card
        exp_month:
          type: integer
          description: Card Expiration Month
          format: int32
        exp_year:
          type: integer
          description: Card Expiration Year
          format: int32
        cardholder_name:
          type: string
          description: Name as it appears on Card
        payment_method_id:
          type: integer
          description: ID of the referenced Payment Method
          format: int64
        default:
          type: boolean
          description: Is Default Method
      description: Payment Method belonging to an Order
      nullable: true
    OrderShippingMethod:
      required:
      - bag_id
      - merchant_id
      - price
      - shipping_method_id
      type: object
      properties:
        type:
          type: string
          description: Type of Shipping Method
          enum:
          - CALCULATED
          - FLAT_RATE_PRICE
          - FLAT_RATE_WEIGHT
        Carrier:
          type: string
          enum:
          - OTHER
          - UPS
          - USPS
          - FEDEX
          - DHL
          - ONTRAC
          - ROYAL_MAIL
          - SENDLE
          - POSTNORD
        label:
          type: string
          description: Shipping Method Label
        price:
          type: integer
          description: Total cost of the Shipping Method. In Cents
          format: int32
        custom:
          type: boolean
          description: Is the shipping method custom. True when the price has been
            overridden.
        min_subtotal:
          type: integer
          description: Minimum Subtotal. In Cents. Only applies to Flat Rate by Price
          format: int32
        max_subtotal:
          type: integer
          description: Maximum Subtotal. In Cents. Only applies to Flat Rate by Price
          format: int32
        min_weight:
          type: number
          description: Minimum Weight. In Cents. Only applies to Flat Rate by Weight
          format: double
        max_weight:
          type: number
          description: Maximum Weight. In Cents. Only applies to Flat Rate by Weight
          format: double
        external_id:
          type: string
          description: ID(s) on external ecommerce platform
        id:
          type: integer
          format: int64
          readOnly: true
        shipping_method_id:
          type: string
          description: ID of the referenced Shipping Method
        bag_id:
          type: integer
          description: ID of the Bag the Shipping Method applies to
          format: int64
        merchant_id:
          type: integer
          description: ID of the merchant the bag belongs to
          format: int32
        tracking_number:
          type: string
          description: Carrier Tracking Number
      description: Shipping Methods belonging to an Order
      nullable: true
    OrderSku:
      required:
      - sku_id
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the Sku in relation to the order.
          format: int64
        offer_id:
          type: integer
          description: ID of the parent Offer that this Sku is a child of.
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant this Sku belongs to.
          format: int32
        app_id:
          type: integer
          description: ID of the App responsible for the creation and submission of
            this Order.
          format: int32
        product_id:
          type: string
          description: ID of the parent product the offer is a child off.
          deprecated: true
        sku_id:
          type: integer
          description: ID of the referenced Sku from the Violet catalog.
          format: int64
        external_id:
          type: string
          description: ID of the SKU on the external commerce platform.
        name:
          type: string
          description: "Name of the Sku, as provided by the merchant."
        brand:
          type: string
          description: Name of the brand selling this Sku.
        thumbnail:
          type: string
          description: URL of the thumbnail image. Useful for order overview displays.
        quantity:
          maximum: 1000
          type: integer
          description: Quantity of the Sku being purchased. Quantities over 1000 will
            default to 1000.
          format: int32
        price:
          type: integer
          description: "Price of the individual SKU, in cents."
          format: int32
        weight:
          type: number
          description: Weight of Sku.
          format: double
          nullable: true
        height:
          type: number
          description: Height of Sku.
          format: double
          nullable: true
        width:
          type: number
          description: Width of Sku.
          format: double
          nullable: true
        length:
          type: number
          description: Length of Sku.
          format: double
          nullable: true
        available:
          type: boolean
          description: Is the product still available for purchase. If a Sku becomes
            unavailable it likely means that the product became out of stock after
            it was added to the cart. Unavailable Sku's cannot be purchased.
        status:
          type: string
          description: Current status of the Sku.
          enum:
          - IN_PROGRESS
          - PROCESSING
          - SHIPPED
          - PARTIALLY_SHIPPED
          - DELIVERED
          - COULD_NOT_DELIVER
          - RETURNED
          - CANCELED
          - REFUNDED
          - ERROR
          - PARTIALLY_RETURNED
          - PARTIALLY_REFUNDED
        product_type:
          type: string
          description: Product type that describes the Sku.
          enum:
          - PHYSICAL
          - DIGITAL
          - VIRTUAL
          - BUNDLED
        custom:
          type: boolean
          description: Is the Sku custom. Is `true` when the price has been overridden.
        custom_properties:
          type: array
          description: Used to provide the merchant with custom values for the product.
            This functionality is currently limited to Shopify merchants.
          nullable: true
          example:
          - name: engraving
            value: Happy Birthday!
          items:
            $ref: '#/components/schemas/OrderSkuCustomProperty'
        quantity_fulfilled:
          type: integer
          description: The quantity of this item that has been fulfilled by the merchant.
          format: int32
        line_price:
          type: integer
          description: "Price of the Sku multiplied by the quantity, in Cents"
          format: int32
      description: SKUs belonging to an Order
    OrderSkuCustomProperty:
      required:
      - name
      - value
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Name of the custom property.
        value:
          minLength: 1
          type: string
          description: Value of the custom property.
      description: Used to provide the merchant with custom values for the product.
        This functionality is currently limited to Shopify merchants.
      nullable: true
      example:
      - name: engraving
        value: Happy Birthday!
    OrderTax:
      required:
      - amount
      - merchant_id
      - order_id
      - rate
      - state
      type: object
      properties:
        order_id:
          type: integer
          description: ID of the Order the Tax belongs to
          format: int64
        merchant_id:
          type: integer
          description: ID of the Merchant the Bag belongs to
          format: int32
        skus:
          type: array
          description: SKUs covered by the Tax
          items:
            type: string
            description: SKUs covered by the Tax
        state:
          type: string
          description: State abbreviation
        postal_code:
          type: string
          description: Postal/Zip Code
        rate:
          type: number
          description: Tax Rate
          format: double
        amount:
          type: integer
          description: Total Tax amount on Bag. In Cents
          format: int32
        description:
          maxLength: 255
          minLength: 0
          type: string
          description: Description of the Tax
      description: Taxes belonging to an Order Bag
      nullable: true
    PaymentTransaction:
      required:
      - amount
      - currency
      - order_id
      - payment_provider
      - payment_provider_transaction_id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the object
          format: int64
        order_id:
          type: integer
          description: Identifier of the Order entity that this payment transaction
            is associated with
          format: int64
        payment_provider:
          type: string
          description: 'Payment Provider that this transaction is executed against.
            This is the provider that handles payment  processing for this transaction. '
        payment_provider_transaction_id:
          type: string
          description: Identifier of the payment transaction in the underlying payment
            provider system.
        payment_method_id:
          type: integer
          description: 'Identifier of the payment method associated with this payment
            transaction in Violet. '
          format: int64
        payment_provider_payment_method_id:
          type: string
          description: 'Identifier of the payment method associated with this payment
            transaction in the underlying payment provider system. '
        payment_intent_client_secret:
          type: string
          description: Client secret for the payment intent associated to this payment
            transaction
        amount:
          type: integer
          description: 'Amount of this payment in the fractional currency unit of
            this transaction (e.g. cents). This is the amount charged to the shopper. '
          format: int32
        metadata:
          type: object
          additionalProperties:
            type: object
            description: Metadata from the payment provider associated to this payment
              transaction
          description: Metadata from the payment provider associated to this payment
            transaction
        related_bags:
          uniqueItems: true
          type: array
          description: 'Identifiers of the Bags in Violet that are associated with
            this payment transaction. The amount of this payment transaction is directly
            computed from the total amounts on the related bags. '
          items:
            type: string
            description: 'Identifiers of the Bags in Violet that are associated with
              this payment transaction. The amount of this payment transaction is
              directly computed from the total amounts on the related bags. '
        related_refunds:
          uniqueItems: true
          type: array
          description: Identifiers of the Refunds in Violet that are associated with
            this payment transaction. Refund amounts are not reflected in the amount
            on this payment transaction.
          items:
            type: string
            description: Identifiers of the Refunds in Violet that are associated
              with this payment transaction. Refund amounts are not reflected in the
              amount on this payment transaction.
        currency:
          type: string
          description: Currency that the amount of this payment transaction is reflected
            in. This is the currency that the payment provider uses to charge the
            shopper payment method.
        status:
          type: string
          description: Underlying status of the payment in the payment provider system
            and should be used to determine what action to take next against this
            payment transaction.
          enum:
          - PROCESSING
          - CAPTURED
          - CANCELLED
          - FAILED
          - BYPASSED
          - REQUIRES_ACTION
          - REQUIRES_PAYMENT_METHOD
          - REQUIRES_AUTHORIZATION
          - AUTHORIZED
          - REFUNDED
          - PARTIALLY_REFUNDED
        errors:
          uniqueItems: true
          type: array
          description: List of errors associated to this payment transaction during
            processing.. This value will only be populated if there are errors during
            processing
          items:
            $ref: '#/components/schemas/PaymentTransactionError'
        date_created:
          type: string
          description: Time at which the object was created. In ISO-8601 format.
          format: date-time
        date_last_modified:
          type: string
          description: 'Time at which the object was last modified. In ISO-8601 format. '
          format: date-time
      description: Payment Transaction
    PaymentTransactionError:
      required:
      - error_message
      - payment_transaction_id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the object.
          format: int64
          readOnly: true
        error_code:
          type: integer
          description: Unique error code corresponding to this error.
          format: int32
        error_message:
          type: string
          description: Error message describing the issue in the underlying system.
        payment_transaction_id:
          type: integer
          description: Identifier of the PaymentTransaction entity that this error
            is associated with
          format: int64
      description: Error associated to a payment transaction
    Transaction:
      required:
      - app_id
      - bag_id
      - merchant_id
      - payment_method_id
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        merchant_id:
          type: integer
          description: ID of the Merchant receiving the transaction
          format: int32
        app_id:
          type: integer
          description: ID of the App that created the Order
          format: int32
        order_id:
          type: integer
          description: ID of the Order the Transaction applies to
          format: int64
        bag_id:
          type: integer
          description: ID of the Bag the Transaction applies to
          format: int64
        payment_method_id:
          type: integer
          description: ID of the referenced Payment Method
          format: int64
        gateway_transaction_id:
          type: string
          description: ID of the Transaction in the Payment Gateway
        gateway:
          type: string
          description: Gateway processing the Transaction
        amount:
          type: integer
          description: Total amount being transacted
          format: int32
        currency:
          type: string
          description: Currency the Transaction takes place in
        type:
          type: string
          description: Transaction Type
          enum:
          - AUTHORIZATION
          - CAPTURE
          - SALE
          - VOID
          - REFUND
        error_code:
          type: string
          description: Error Code from gateway if error occurred
        status:
          type: string
          description: Transaction Status
          enum:
          - PROCESSING
          - COMPLETED
          - REFUNDED
          - REQUIRES_ACTION
        test:
          type: boolean
          description: Is this a test Transaction
        date_created:
          type: string
          description: Date of transaction creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last transaction update
          format: date-time
        order_payment_method:
          $ref: '#/components/schemas/OrderPaymentMethod'
      description: Order Transaction
      nullable: true
    DiscountRequest:
      type: object
      properties:
        code:
          type: string
          description: Discount code being applied
        merchant_id:
          type: integer
          description: ID of the Merchant the discount belongs to
          format: int32
        email:
          type: string
          description: "Customer email address, possibly necessary for once-per-customer\
            \ discounts."
      description: Discount request
      nullable: true
    PaymentMethodRequest:
      type: object
      properties:
        token:
          type: string
          description: "Payment Token generated on a specific payment provider. When\
            \ a token is provided, payment_provider must also be specified in the\
            \ request."
        customer_id:
          type: string
          description: "Unique identifier of the Customer in the payment provider\
            \ that the payment method is associated to. When a customer_id is provided,\
            \ payment_provider must also be specified in the request."
        intent_based_capture:
          type: boolean
          description: Trigger payment intent based capture
        payment_provider:
          type: string
          description: "Payment provider that this payment method was created on,\
            \ if any."
        ip_v4:
          type: string
          description: IP address of the device from which this Payment Method originates.
        type:
          type: string
          description: Type of the payment method being passed in.
          enum:
          - SINGLE_USE_CARD_TOKEN
          - MULTI_USE_CARD_TOKEN
          - BANK_TOKEN
        card_number:
          type: string
          description: Number on the credit or debit card.
        card_cvc:
          type: integer
          description: CVC code on the credit or debit card.
          format: int32
        card_exp_month:
          type: integer
          description: Expiration month of the credit or debit card.
          format: int32
        card_exp_year:
          type: integer
          description: Expiration year of the credit or debit card.
          format: int32
        card_postal_code:
          type: string
          description: Postal Code of the credit or debit card.
        complete_checkout:
          type: boolean
          description: Submit cart immediately after applying the payment method.
            Cannot be combined with intent_based_checkout.
        app_order_id:
          type: string
          description: Map the order in Violet to an order record within your system.
      description: The payment method request for a cart. If the token is provided
        no card data is required.
    BagShippingMethod:
      type: object
      properties:
        bag_id:
          type: integer
          description: The ID of the bag the Shipping Method belongs to
          format: int64
        shipping_method_id:
          type: string
          description: ID of the Shipping Method
        shipping_method_label:
          type: string
          description: Label of the Shipping Method
        shipping_method_price:
          type: integer
          description: Price of the Shipping Method
          format: int32
        custom:
          type: boolean
          description: Is the shipping method custom. True when the price has been
            overridden.
      description: Shipping Method applied to a Bag
    CalculateCartResponse:
      type: object
      properties:
        estimated_carts:
          type: array
          description: Estimated carts where each cart represents a merchants line
            items and totals.
          readOnly: true
          items:
            $ref: '#/components/schemas/CalculatedCartTotals'
      description: Calculate Cart Response
    CalculatedCartShippingMethod:
      type: object
      properties:
        label:
          type: string
          description: "The title of the shipping method, provided by the merchant."
          readOnly: true
        carrier:
          type: string
          description: The enumerate value of the carrier. Violet will attempt to
            match the raw carrier name to an enum. If no match is found the value
            will be OTHER.
          readOnly: true
          enum:
          - OTHER
          - UPS
          - USPS
          - FEDEX
          - DHL
          - ONTRAC
          - ROYAL_MAIL
          - SENDLE
          - POSTNORD
        raw_carrier:
          type: string
          description: The raw name of the carrier provided by the merchant in the
            external commerce platform.
          readOnly: true
        price:
          type: integer
          description: "The price of the shipping method, in cents."
          format: int32
          readOnly: true
        shipping_method_id:
          type: string
          description: The ID of the shipping method in the external commerce platform.
          readOnly: true
      description: Calculated Cart Shipping Method
      readOnly: true
    CalculatedCartSku:
      required:
      - sku_id
      type: object
      properties:
        quantity:
          title: Quantity
          minimum: 1
          type: integer
          description: Quantity of the Sku.
          format: int32
          default: 1
        sku_id:
          title: Sku ID
          type: integer
          description: ID of the Violet Sku.
          format: int64
        name:
          type: string
          description: Name of the Sku
          readOnly: true
        price:
          type: integer
          description: "Price of the individual Sku, in cents."
          format: int32
          readOnly: true
        merchant_id:
          type: integer
          description: ID of the merchant in Violet.
          format: int32
          readOnly: true
        external_id:
          type: string
          description: ID of the equivalent Sku in the external commerce platform.
          readOnly: true
        available:
          type: boolean
          description: Is the Sku available in the external commerce platform and
            included in the calculation.
          readOnly: true
        requires_shipping:
          type: boolean
          description: Does the Sku require shipping.
          readOnly: true
        product_type:
          type: string
          description: "Is the Sku physical, digital, or virtual."
          readOnly: true
          enum:
          - PHYSICAL
          - DIGITAL
          - VIRTUAL
          - BUNDLED
        line_price:
          type: integer
          description: "Price of the Sku multiplied by the quantity, in cents."
          format: int32
      description: Calculated Cart Sku
      readOnly: true
    CalculatedCartTotals:
      type: object
      properties:
        merchant_id:
          type: integer
          description: ID of the merchant this cart is calculated for.
          format: int32
          readOnly: true
        platform:
          type: string
          description: Platform of the merchant this cart is calculated for.
          readOnly: true
          enum:
          - OTHER
          - SHOPIFY
          - MAGENTO
          - MAGENTO_ONE
          - WOOCOMMERCE
          - BIGCOMMERCE
          - LIGHTSPEED
          - ECWID
          - YAAS
          - SPREECOMMERCE
          - DEMANDWARE
          - VOLUSION
          - PRESTASHOP
          - THREEDCART
          - SYLIUS
          - WIX
          - SWELL
          - MIVA
          - WEBSPHERE
          - ORACLECC
          - SAPCC
          - SQUARESPACE
          - SHOPWARE
          - COMMERCETOOLS
          - MEDUSA
          - ABICART
          - SPRYKER
          - MYSTORE
          - CENTRA
          - XCART
          - VTEX
          - KIBO
          - SALEOR
          - VENDO
          - CHORD
          - DIGITALRIVER
          - SQUARE
          - AMAZON
          - BIGCARTEL
          - CUSTOM
        base_currency:
          maxLength: 3
          minLength: 3
          type: string
          description: The base currency the cart should is calculated in.
          readOnly: true
          default: USD
          enum:
          - USD
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BWP
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - ISK
          - JMD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KRW
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SZL
          - THB
          - TJS
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - UYU
          - UZS
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - BTN
        sub_total:
          minimum: 0
          type: integer
          description: The subtotal of the cart in cents.
          format: int32
          readOnly: true
        shipping_total:
          minimum: 0
          type: integer
          description: The shipping total of the cart in cents.
          format: int32
          readOnly: true
        tax_total:
          minimum: 0
          type: integer
          description: The tax total of the cart in cents.
          format: int32
          readOnly: true
        discount_total:
          minimum: 0
          type: integer
          description: The discount total of the cart in cents.
          format: int32
          readOnly: true
        total:
          minimum: 0
          type: integer
          description: "The grand total of the cart in cents. This is the sum of the\
            \ subtotal, shipping total, and tax total, with the discount total subtracted."
          format: int32
          readOnly: true
        skus:
          type: array
          description: A collection of skus calculated for the cart.
          readOnly: true
          items:
            $ref: '#/components/schemas/CalculatedCartSku'
        available_shipping_methods:
          type: array
          description: A collection of shipping methods calculated for the cart.
          readOnly: true
          items:
            $ref: '#/components/schemas/CalculatedCartShippingMethod'
        has_shipping_methods:
          type: boolean
          description: Does the calculated cart have available shipping methods.
          readOnly: true
        external_error_messages:
          type: array
          description: Error messages from the external commerce platform.
          readOnly: true
          items:
            type: string
            description: Error messages from the external commerce platform.
            readOnly: true
      description: Calculate Cart Response
      readOnly: true
    BaseAddress:
      required:
      - address_1
      - city
      - country
      - postal_code
      - state
      type: object
      properties:
        city:
          title: City or Subdivision
          type: string
          example: Seattle
        state:
          title: State/Province
          type: string
          description: The state/province of the address. Abbreviations are recommended
            but not required. Violet will attempt to abbreviate these values when
            abbreviations are required by the external commerce platform.
          example: WA
        postal_code:
          title: Postal Code
          maxLength: 10
          minLength: 4
          type: string
          description: The postal/zip code of the address.
        country:
          title: Country
          maxLength: 2
          minLength: 2
          type: string
          description: The ISO2 country code.
          example: US
        address_1:
          title: Address Line 1
          type: string
        address_2:
          title: Address Line 2
          type: string
          nullable: true
      description: The address the items in the cart should be shipped to.
    BaseSku:
      required:
      - sku_id
      type: object
      properties:
        quantity:
          title: Quantity
          minimum: 1
          type: integer
          description: Quantity of the Sku.
          format: int32
          default: 1
        sku_id:
          title: Sku ID
          type: integer
          description: ID of the Violet Sku.
          format: int64
      description: A list of one or more Violet Sku's. Sku's from the same merchant
        will be grouped and calculated together.
    CalculateCartRequest:
      required:
      - shipping_address
      - skus
      type: object
      properties:
        base_currency:
          maxLength: 3
          minLength: 3
          type: string
          description: The base currency the cart should be calculated in.
          default: USD
          enum:
          - USD
          - AED
          - AFN
          - ALL
          - AMD
          - ANG
          - AOA
          - ARS
          - AUD
          - AWG
          - AZN
          - BAM
          - BBD
          - BDT
          - BGN
          - BIF
          - BMD
          - BND
          - BOB
          - BRL
          - BSD
          - BWP
          - BZD
          - CAD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EGP
          - ETB
          - EUR
          - FJD
          - FKP
          - GBP
          - GEL
          - GIP
          - GMD
          - GNF
          - GTQ
          - GYD
          - HKD
          - HNL
          - HRK
          - HTG
          - HUF
          - IDR
          - ILS
          - INR
          - ISK
          - JMD
          - JPY
          - KES
          - KGS
          - KHR
          - KMF
          - KRW
          - KYD
          - KZT
          - LAK
          - LBP
          - LKR
          - LRD
          - LSL
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MNT
          - MOP
          - MRO
          - MUR
          - MVR
          - MWK
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - PAB
          - PEN
          - PGK
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SBD
          - SCR
          - SEK
          - SGD
          - SHP
          - SLL
          - SOS
          - SRD
          - STD
          - SVC
          - SZL
          - THB
          - TJS
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - UYU
          - UZS
          - VND
          - VUV
          - WST
          - XAF
          - XCD
          - XOF
          - XPF
          - YER
          - ZAR
          - ZMW
          - BTN
        skus:
          type: array
          description: A list of one or more Violet Sku's. Sku's from the same merchant
            will be grouped and calculated together.
          items:
            $ref: '#/components/schemas/BaseSku'
        shipping_address:
          $ref: '#/components/schemas/BaseAddress'
      description: Calculate Cart Request
    BagCancellation:
      type: object
      properties:
        order_id:
          type: integer
          description: The ID of the order this cancellation relates to.
          format: int64
          readOnly: true
        bag_id:
          type: integer
          description: The ID of the bag this cancellation relates to.
          format: int64
          readOnly: true
        merchant_id:
          type: integer
          description: The ID of the merchant this cancellation relates to.
          format: int32
          readOnly: true
        external_order_id:
          maxLength: 64
          minLength: 1
          type: string
          description: The ID of the order in the external commerce platform this
            cancellation relates to.
          readOnly: true
        status:
          type: string
          description: Status of the bag cancellation.
          readOnly: true
          enum:
          - CANCELED
          - CANCELLATION_FAILURE
        originated_by:
          type: string
          description: Who is responsible for cancelling the order.
          readOnly: true
          enum:
          - CHANNEL
          - MERCHANT
          - VIOLET
        date_cancelled:
          type: string
          description: Date and time that the order was cancelled.
          format: date-time
          readOnly: true
        refund:
          $ref: '#/components/schemas/Refund'
        errors:
          type: array
          description: "Errors, if any, that occurred when attempting to cancel the\
            \ external order."
          nullable: true
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderError'
      description: Cancellation record for a bag.
      readOnly: true
    OrderCancellation:
      type: object
      properties:
        order_id:
          type: integer
          description: The ID of the order this cancellation relates to.
          format: int64
          readOnly: true
        app_id:
          type: integer
          description: The ID of the app that originated this order.
          format: int32
          readOnly: true
        status:
          type: string
          description: Status of the overall cancellation.
          readOnly: true
          enum:
          - CANCELED
          - PARTIALLY_CANCELED
          - CANCELLATION_FAILURE
        cancelled_bags:
          type: array
          description: Bags within the order that were cancelled.
          readOnly: true
          items:
            $ref: '#/components/schemas/BagCancellation'
        message:
          type: string
          description: Description of the outcome of the order cancellation request.
          readOnly: true
      description: Cancellation record for an order.
    Refund:
      required:
      - amount
      - app_id
      - gateway_transaction_id
      - merchant_id
      - order_id
      - transaction_id
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        order_id:
          type: integer
          description: ID of the Order being refunded
          format: int64
        bag_id:
          type: integer
          description: ID of the Bag being refunded
          format: int64
        merchant_id:
          type: integer
          description: ID of the merchant making the refund
          format: int32
        app_id:
          type: integer
          description: ID of the App that created the Order
          format: int32
        transaction_id:
          type: integer
          description: ID of the Transaction being refunded
          format: int64
        gateway_transaction_id:
          type: string
          description: ID of the Transaction in the Payment Gateway
        amount:
          type: integer
          description: Amount being refunded. In Cents
          format: int32
        merchant_transfer_reversal_amount_usd:
          type: integer
          description: Amount being taken back from the associated transfer to the
            merchant. In Cents
          format: int32
        developer_transfer_reversal_amount_usd:
          type: integer
          description: Amount being taken back from the associated transfer to the
            developer. In Cents
          format: int32
        reason:
          type: string
          description: Reason for refund
        refund_currency:
          type: string
          description: Currency set for this refund by the external ecom platform
        status:
          type: string
          description: Status of the Refund
          enum:
          - PROCESSING
          - COMPLETED
          - CANCELED
          - PARTIALLY_COMPLETED
          - FAILED
          - EXTERNAL
        skus:
          uniqueItems: true
          type: array
          description: SKUs the refund applies to
          items:
            $ref: '#/components/schemas/RefundOrderSku'
        date_created:
          type: string
          description: Date of creation
          format: date-time
        date_last_modified:
          type: string
          description: Date of last update
          format: date-time
        external_id:
          type: string
          description: ID of the refund on the external commerce platform. This value
            will only be populated if the external commerce platform supports refund
            ID's.
        errors:
          uniqueItems: true
          type: array
          description: List of errors associated to this refund during processing.
            This value will only be populated if there are errors during processing
          items:
            $ref: '#/components/schemas/RefundError'
      description: Order Refund
    RefundError:
      required:
      - error_message
      - refund_id
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the object.
          format: int64
          readOnly: true
        error_code:
          type: integer
          description: Unique error code corresponding to this error.
          format: int32
        error_message:
          type: string
          description: Error message describing the issue in the underlying system.
        refund_id:
          type: integer
          description: ID of the Refund this Error is associated to
          format: int64
      description: Error associated to a refund
    RefundOrderSku:
      required:
      - order_sku_id
      - refund_id
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        refund_id:
          type: integer
          description: Id of the Refund associated with Refund Order Sku
          format: int64
        bag_id:
          type: integer
          description: ID of the Bag being refunded
          format: int64
        quantity_refunded:
          type: integer
          description: Quantity of the this item refunded by this refund.
          format: int32
        external_id:
          type: string
          description: Variant Id in external Ecom platform
        order_sku_id:
          type: integer
          description: Id of the Order Sku associated with Refund Order Sku
          format: int64
      description: Refunded Order Sku
    CancelOrderRequest:
      type: object
      properties:
        reason:
          maxLength: 255
          type: string
          description: Custom message describing the reason for the cancellation.
        reason_code:
          maxLength: 255
          type: string
          description: Code that best represents the reason for the cancellation.
          default: OTHER
          enum:
          - OTHER
          - CUSTOMER
          - INVENTORY
          - FRAUD
          - DECLINED
        restock_items:
          type: boolean
          description: Should the items be restocked. In most cases this should be
            `true` since only unfulfilled orders can be cancelled.
          default: true
        notify_customer:
          type: boolean
          description: Should the customer be notified by the merchants system that
            a cancellation has occurred.
          default: false
    CartInitializationRequest:
      type: object
      properties:
        base_currency:
          type: string
          description: Base currency that the cart should operate in.
          nullable: true
          default: USD
        skus:
          type: array
          description: One or more Sku's to initialize the cart with.
          nullable: true
          items:
            $ref: '#/components/schemas/OrderSku'
        referral_id:
          type: string
          description: Associate the cart with a user or affiliate in your system.
            This value can also be added later on cart submission.
          nullable: true
        app_order_id:
          type: string
          description: Associate the cart with an order record in your system. This
            value can also be added later on cart submission.
          nullable: true
        customer:
          $ref: '#/components/schemas/OrderCustomer'
        discounts:
          uniqueItems: true
          type: array
          description: One or more discounts to initialize the cart with.
          nullable: true
          items:
            $ref: '#/components/schemas/DiscountRequest'
        wallet_based_checkout:
          type: boolean
          description: Boolean denoting whether or not this order will be placed through
            a wallet based payment mechanism such as apple pay.
          default: false
      description: Optional data to initialize the cart with upon creation.
    CreateOrderRequest:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
        payment_method:
          $ref: '#/components/schemas/PaymentMethodRequest'
    VioletPageOrder:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            $ref: '#/components/schemas/Order'
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    VioletPageable:
      type: object
      properties:
        page_number:
          type: integer
          description: The current page number (one based)
          format: int32
        page_size:
          type: integer
          description: The number of elements per page
          format: int32
        sort:
          $ref: '#/components/schemas/VioletSort'
        offset:
          type: integer
          description: The offset
          format: int64
        paged:
          type: boolean
          description: Boolean indicating if the result is paged
        unpaged:
          type: boolean
          description: Boolean indicating if the result is unpaged
      description: Violet wrapper for springframework pageable
    VioletSort:
      type: object
      properties:
        unsorted:
          type: boolean
          description: Boolean indicating if the result set is unsorted
        sorted:
          type: boolean
          description: Boolean indicating if the result set is sorted
        empty:
          type: boolean
          description: Boolean indicating if the result set is empty
      description: Violet Wrapper for springframework sort
    OrderShippingMethodWrapper:
      type: object
      properties:
        bag_id:
          type: integer
          format: int64
        shipping_methods:
          type: array
          items:
            $ref: '#/components/schemas/OrderShippingMethod'
      description: Order Shipping Method Wrapper
    Error:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/ErrorData'
        id:
          type: object
        ids:
          type: array
          items:
            type: object
    ErrorData:
      type: object
      properties:
        skus:
          type: array
          items:
            $ref: '#/components/schemas/SkuError'
    SkuError:
      type: object
      properties:
        message:
          type: string
        name:
          type: string
        skuId:
          type: integer
          format: int64
        orderSkuId:
          type: integer
          format: int64
        bagId:
          type: integer
          format: int64
    VioletPageBag:
      type: object
      properties:
        content:
          type: array
          description: The actual content of the response; A list of the result objects
          items:
            $ref: '#/components/schemas/Bag'
        last:
          type: boolean
          description: Boolean indicating if this is the last page
        total_pages:
          type: integer
          description: The total count of pages available
          format: int32
        total_elements:
          type: integer
          description: The total count of objects available
          format: int32
        first:
          type: boolean
          description: Boolean indicating if this is the first page of the response
        number_of_elements:
          type: integer
          description: The total number of objects in this specific response
          format: int32
        size:
          type: integer
          description: The page size selected at request time
          format: int32
        number:
          type: integer
          description: The page number selected at request time
          format: int32
        empty:
          type: boolean
          description: Boolean indicating if the response content is empty
        next_page_cursor:
          type: string
          description: Contains the cursor for the next page. This property will only
            be used for situations where the API does not support the page number/page
            size paradigm and it will mutually exclusive with the size/number fields
            in the response. If this property is returned it must be passed when requesting
            the next page from the API. Does not apply to endpoints that do not have
            a next_page_cursor query param documented.
        pageable:
          $ref: '#/components/schemas/VioletPageable'
        sort:
          $ref: '#/components/schemas/VioletSort'
    BagSearchRequest:
      type: object
      properties:
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        order_id:
          type: integer
          description: Order ID
          format: int64
        id:
          type: integer
          description: Bag ID
          format: int64
        external_id:
          type: string
          description: Bag External ID
        bag_status:
          type: string
          description: Bag Status
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - ACCEPTED
          - COMPLETED
          - PARTIALLY_REFUNDED
          - REFUNDED
          - REJECTED
          - CANCELED
          - BACKORDERED
        app_order_id:
          type: string
          description: Order ID in the Channels System
        before_date:
          type: string
          description: Before date last modified
          format: date-time
        after_date:
          type: string
          description: After date last modified
          format: date-time
        before_date_created:
          type: string
          description: Before date last created
          format: date-time
        after_date_created:
          type: string
          description: After date last created
          format: date-time
        sort_by:
          type: string
          description: Property to sort by in camelCase
        sort_direction:
          type: string
          description: Direction to sort by
      description: Bag Search Request
    OrderSearchRequest:
      type: object
      properties:
        user_id:
          type: integer
          description: User ID
          format: int64
        order_id:
          type: integer
          description: Order ID
          format: int64
        referral_id:
          type: string
          description: Referral ID
        bag_id:
          type: integer
          description: Bag ID
          format: int64
        bag_status:
          type: string
          description: Bag Status
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - ACCEPTED
          - COMPLETED
          - PARTIALLY_REFUNDED
          - REFUNDED
          - REJECTED
          - CANCELED
          - BACKORDERED
        merchant_id:
          type: integer
          description: Merchant ID
          format: int32
        before_date:
          type: string
          description: Before date
          format: date-time
        after_date:
          type: string
          description: After date
          format: date-time
        app_order_id:
          type: string
          description: Order ID in the Channels System
      description: Order Search Request
    CartSubmissionRequest:
      type: object
      properties:
        referral_id:
          type: string
          description: Associate the order with a user or affiliate in your system
          nullable: true
        app_order_id:
          type: string
          description: Map the order in Violet to an order record within your system.
          nullable: true
        app_transaction_id:
          type: string
          description: Transaction ID representing a transaction in the channels system..
            This property only applies to channels approved for external payment processing.
          nullable: true
        app_transaction_gateway:
          type: string
          description: Gateway used to submit the order. This property only applies
            to channels approved for external payment processing.
          nullable: true
        order_customer:
          $ref: '#/components/schemas/OrderCustomer'
      description: Properties for cart submission.
